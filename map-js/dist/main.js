/*! For license information please see main.js.LICENSE.txt */
var maputils;(()=>{var __webpack_modules__={844:function(module){var factory;factory=()=>(()=>{var __webpack_modules__={"./node_modules/events/events.js":module=>{"use strict";eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/events/events.js?")},"./src/circle-coverer/circle-coverer.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   s2CircleCoverer: () => (/* binding */ s2CircleCoverer)\n/* harmony export */ });\n/* harmony import */ var _utils_wasm_load_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/wasm/load-wasm */ "./src/utils/wasm/load-wasm.ts");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/log */ "./src/utils/log.ts");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nfunction s2CircleCoverer(lat, lng, radius) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (typeof s2CircleCovererGo === "undefined") {\n            (0,_utils_log__WEBPACK_IMPORTED_MODULE_1__.consoleLog)("Loading WASM", "debug");\n            yield (0,_utils_wasm_load_wasm__WEBPACK_IMPORTED_MODULE_0__.loadCircleCovererWasm)();\n        }\n        return s2CircleCovererGo({ lat: lat, lng: lng }, radius, 1, // Min level\n        23, // Max level (avg. area: 1.21 m^2)\n        10);\n    });\n}\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/circle-coverer/circle-coverer.ts?')},"./src/config.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONFIG: () => (/* binding */ CONFIG)\n/* harmony export */ });\nvar CONFIG = {\n    DoH_URL: 'https://dns.google/resolve',\n    NEGATIVE_CACHING_ENABLED: true,\n    DEFAULT_NEGATIVE_CACHING_TTL: 720,\n    UNKOWN_ALTITUDE_CODE: 'U',\n};\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/config.ts?")},"./src/discovery/dns.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DNS: () => (/* binding */ DNS)\n/* harmony export */ });\n/* harmony import */ var _utils_axiosInstance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/axiosInstance */ \"./src/utils/axiosInstance.ts\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config */ \"./src/config.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n;\n;\n;\nclass DNS {\n    constructor(negativeCachingEnabled = _config__WEBPACK_IMPORTED_MODULE_1__.CONFIG.NEGATIVE_CACHING_ENABLED) {\n        // Cache to store the IP and CNAME of domains.\n        // The key is a combination of the domain and the type of record.\n        // For example, to access CNAME record for example.com, use cache['example.com']['CNAME'].\n        this.cache = {};\n        this.negativeCachingEnabled = negativeCachingEnabled;\n    }\n    /**\n     * Add a record to the cache along with the timestamp.\n     */\n    addRecordToCache(domain, type, record) {\n        if (!(domain in this.cache)) {\n            this.cache[domain] = {};\n        }\n        if (!(type in this.cache[domain])) {\n            this.cache[domain][type] = [];\n        }\n        record.timestamp = Date.now();\n        this.cache[domain][type].push(record);\n    }\n    /**\n     * Get record from cache if available and if TTL has not expired.\n     *\n     */\n    getRecordFromCache(domain, type) {\n        if (!(domain in this.cache) || !(type in this.cache[domain])) {\n            return null;\n        }\n        let cached_records = this.cache[domain][type];\n        let recordsToReturn = [];\n        let recordIndicesToRemove = [];\n        for (let i = 0; i < cached_records.length; i++) {\n            let record = cached_records[i];\n            if ((Date.now() - record.timestamp) < record.TTL * 1000) {\n                recordsToReturn.push(record);\n            }\n            // Mark record to be removed if TTL has expired\n            else {\n                recordIndicesToRemove.push(i);\n            }\n        }\n        // Remove records with expired TTL\n        cached_records = cached_records.filter((record, index) => !recordIndicesToRemove.includes(index));\n        this.cache[domain][type] = cached_records;\n        // Return the records if there are any\n        if (recordsToReturn.length > 0) {\n            return recordsToReturn;\n        }\n        return null;\n    }\n    /**\n     * Get the requested DNS record of domain and given type. Try to use cache first.\n     * If there are multiple records of the requested type, the first one is returned.\n     * Add returned records to the cache even if they are not of the requested type.\n     *\n     * @param {string} domain - The domain name to lookup.\n     * @param {string} type - The type of record to lookup (A, CNAME, PTR, TXT, LOC).\n     * @returns {Promise} - A promise that resolves to an array of records or an error message\n     *\n     * The record objects contains the following relevant fields if the record is found:\n     * - data: The IP address(for A type) or CNAME (for CNAME type) etc.\n     * - TTL: Time to live in seconds\n     *\n     * If the record is not found, the following fields are present:\n     * - error: 'NO-ANSWER'\n     *\n     * If the record was from the cache, the following fields are also present:\n     * - timestamp: The time when the record was fetched if it is in the cache\n     * - fromCache: true if the record was fetched from the cache\n     */\n    dnsLookup(domain_1, type_1) {\n        return __awaiter(this, arguments, void 0, function* (domain, type, dohUrl = _config__WEBPACK_IMPORTED_MODULE_1__.CONFIG.DoH_URL) {\n            if (!Object.values(DNS.DNS_TYPE_ID_TO_NAME).includes(type)) {\n                throw new Error(`Unsupported DNS record type: ${type}. Supported types: ${Object.values(DNS.DNS_TYPE_ID_TO_NAME).join(', ')}`);\n            }\n            const cached_records = this.getRecordFromCache(domain, type);\n            if (cached_records) {\n                for (let record of cached_records) {\n                    record.fromCache = true;\n                }\n                return cached_records;\n            }\n            let dnsResponse;\n            try {\n                const response = yield _utils_axiosInstance__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(dohUrl, {\n                    params: { name: domain, type: type },\n                    headers: { accept: 'application/dns-json' }\n                });\n                dnsResponse = response.data;\n            }\n            catch (error) {\n                let errorRecord = {\n                    error: 'DOH-REQUEST-ERROR',\n                    TTL: _config__WEBPACK_IMPORTED_MODULE_1__.CONFIG.DEFAULT_NEGATIVE_CACHING_TTL\n                };\n                if (this.negativeCachingEnabled) {\n                    this.addRecordToCache(domain, type, errorRecord);\n                }\n                return [errorRecord];\n            }\n            // Check if the response contains the requested record type and return the first one\n            // If no record of the requested type is found, throw an error\n            if ('Answer' in dnsResponse && dnsResponse.Answer.length > 0) {\n                let recordsToReturn = [];\n                for (let record of dnsResponse.Answer) {\n                    // Add to cache\n                    if (record.type in DNS.DNS_TYPE_ID_TO_NAME) {\n                        this.addRecordToCache(domain, DNS.DNS_TYPE_ID_TO_NAME[record.type], record);\n                    }\n                    if (DNS.DNS_TYPE_ID_TO_NAME[record.type] === type) {\n                        recordsToReturn.push(record);\n                    }\n                }\n                if (recordsToReturn.length > 0) {\n                    return recordsToReturn;\n                }\n            }\n            // If no answer is found, cache the negative result if negative caching is enabled\n            else if ('Authority' in dnsResponse && dnsResponse.Authority.length > 0 && this.negativeCachingEnabled) {\n                let soa_record = null;\n                for (let record of dnsResponse.Authority) {\n                    if (record.type === 6) {\n                        soa_record = record;\n                        break;\n                    }\n                }\n                if (soa_record) {\n                    const soa_record_data = soa_record.data.split(' ');\n                    // Negative caching TTL is minimum of the MINIMUM field in SOA record\n                    // and the TTL of the SOA record itself. RFC 2308.\n                    const minimum_soa_ttl = Number(soa_record_data[soa_record_data.length - 1]);\n                    const soa_ttl = Number(soa_record.TTL);\n                    const negative_caching_ttl = Math.min(minimum_soa_ttl, soa_ttl);\n                    let negativeRecord = {\n                        error: 'NO-ANSWER',\n                        TTL: negative_caching_ttl\n                    };\n                    this.addRecordToCache(domain, type, negativeRecord);\n                    return [negativeRecord];\n                }\n            }\n            // If no-authority record is returned, cache the no-authority error\n            else if (this.negativeCachingEnabled) {\n                let errorRecord = {\n                    error: 'NO-AUTHORITY',\n                    TTL: _config__WEBPACK_IMPORTED_MODULE_1__.CONFIG.DEFAULT_NEGATIVE_CACHING_TTL\n                };\n                this.addRecordToCache(domain, type, errorRecord);\n                return [errorRecord];\n            }\n        });\n    }\n}\n// Mapping from DNS type ID (returned by DoH request) to type name\n// Only a few types are supported.\n// From: https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#dns-parameters-4\nDNS.DNS_TYPE_ID_TO_NAME = {\n    1: 'A',\n    5: 'CNAME',\n    12: 'PTR',\n    16: 'TXT',\n    29: 'LOC'\n};\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/discovery/dns.ts?")},"./src/discovery/location-to-geo-domain.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocationToGeoDomain: () => (/* binding */ LocationToGeoDomain)\n/* harmony export */ });\n/* harmony import */ var _circle_coverer_circle_coverer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../circle-coverer/circle-coverer */ \"./src/circle-coverer/circle-coverer.ts\");\n/* harmony import */ var _utils_s2_conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/s2-conversions */ \"./src/utils/s2-conversions.ts\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config */ \"./src/config.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\nclass LocationToGeoDomain {\n    static getBaseGeoDomains(lat, lon, error_m) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const baseGeoDomains = [];\n            const s2Tokens = yield (0,_circle_coverer_circle_coverer__WEBPACK_IMPORTED_MODULE_0__.s2CircleCoverer)(lat, lon, error_m);\n            for (let s2Token of s2Tokens) {\n                let domainDigits = yield (0,_utils_s2_conversions__WEBPACK_IMPORTED_MODULE_1__.tokenToDomainDigits)(s2Token);\n                baseGeoDomains.push(domainDigits);\n            }\n            return baseGeoDomains;\n        });\n    }\n    static formAddressFromDigits(digits, altitude, suffix) {\n        return altitude + '.' + digits.join('.') + '.' + suffix;\n    }\n    static getParents(domainDigits) {\n        const parents = [];\n        for (let i = 1; i < domainDigits.length; i++) {\n            parents.push(domainDigits.slice(i));\n        }\n        return parents;\n    }\n    /**\n     *\n     * @param {Number} lat Latitude\n     * @param {Number} lon Longitude\n     * @param {Number} error_m Error in meters\n     * @param {String} suffix The suffix to append to the geo domains. Default is from the config file.\n     * @param {Number} altitude Altitude in feet. If it unknown, pass 'U'.\n     * @param {Boolean} exploreUnknownAltitude If true, explore unknown altitude. If false, explore only the given altitude.\n     * @returns Geo domains for the given location. Includes the base geo domain, siblings and all parent geo domains.\n    */\n    static getGeoDomains(lat_1, lon_1, error_m_1, suffix_1) {\n        return __awaiter(this, arguments, void 0, function* (lat, lon, error_m, suffix, altitude = _config__WEBPACK_IMPORTED_MODULE_2__.CONFIG.UNKOWN_ALTITUDE_CODE, exploreUnknownAltitude = false) {\n            // Convert altitude to string\n            let altitudeString = '';\n            if (typeof altitude === 'string') {\n                altitudeString = altitude;\n            }\n            else if (typeof altitude === 'number') {\n                altitudeString = Math.round(Number(altitude)).toString();\n            }\n            const geoDomains = [];\n            const baseGeoDomains = yield LocationToGeoDomain.getBaseGeoDomains(lat, lon, error_m);\n            for (let baseGeoDomain of baseGeoDomains) {\n                geoDomains.push(LocationToGeoDomain.formAddressFromDigits(baseGeoDomain, altitudeString, suffix));\n                if (exploreUnknownAltitude && altitudeString !== _config__WEBPACK_IMPORTED_MODULE_2__.CONFIG.UNKOWN_ALTITUDE_CODE) {\n                    geoDomains.push(LocationToGeoDomain.formAddressFromDigits(baseGeoDomain, _config__WEBPACK_IMPORTED_MODULE_2__.CONFIG.UNKOWN_ALTITUDE_CODE, suffix));\n                }\n                for (let parent of LocationToGeoDomain.getParents(baseGeoDomain)) {\n                    geoDomains.push(LocationToGeoDomain.formAddressFromDigits(parent, altitudeString, suffix));\n                    if (exploreUnknownAltitude && altitudeString !== _config__WEBPACK_IMPORTED_MODULE_2__.CONFIG.UNKOWN_ALTITUDE_CODE) {\n                        geoDomains.push(LocationToGeoDomain.formAddressFromDigits(parent, _config__WEBPACK_IMPORTED_MODULE_2__.CONFIG.UNKOWN_ALTITUDE_CODE, suffix));\n                    }\n                }\n            }\n            // Get unique geo domains\n            return Array.from(new Set(geoDomains));\n        });\n    }\n}\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/discovery/location-to-geo-domain.ts?")},"./src/discovery/maps-discovery.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapsDiscovery: () => (/* binding */ MapsDiscovery)\n/* harmony export */ });\n/* harmony import */ var _dns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dns */ \"./src/discovery/dns.ts\");\n/* harmony import */ var _location_to_geo_domain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./location-to-geo-domain */ \"./src/discovery/location-to-geo-domain.ts\");\n/* harmony import */ var _localization_map_server__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../localization/map-server */ \"./src/localization/map-server.ts\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../config */ \"./src/config.ts\");\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/log */ \"./src/utils/log.ts\");\n/* harmony import */ var _utils_events__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/events */ \"./src/utils/events.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _MapsDiscovery_instances, _MapsDiscovery_relocalizeWithinDiscoveredServers, _MapsDiscovery_raiseEventAndReturn;\n\n\n\n\n\n\n// Nameserver and the DNS object to use for querying DNS records from this name server\n// This is to prevent caches from different name servers from mixing up\nclass Nameserver {\n    constructor(name) {\n        this.name = name;\n        this.dnsObj = new _dns__WEBPACK_IMPORTED_MODULE_0__.DNS();\n    }\n    lookup(domain, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.dnsObj.dnsLookup(domain, type, this.name);\n        });\n    }\n}\n// Queue of name servers\nclass NameserverQueue {\n    constructor() {\n        this.queue = [];\n    }\n    // Add a record to the queue\n    add(nameserver) {\n        this.queue.push(nameserver);\n    }\n    // Get a record from the queue\n    get() {\n        if (this.queue.length === 0) {\n            return null;\n        }\n        return this.queue.shift();\n    }\n    // Check if the queue is empty\n    isEmpty() {\n        return this.queue.length === 0;\n    }\n}\nvar MapEvents;\n(function (MapEvents) {\n    MapEvents[\"goodMapFound\"] = \"mapfound:good\";\n    MapEvents[\"poorMapFound\"] = \"mapfound:poor\";\n    MapEvents[\"noMapFound\"] = \"nomap\";\n})(MapEvents || (MapEvents = {}));\n;\nclass MapsDiscovery {\n    constructor(suffix, rootNameserver = _config__WEBPACK_IMPORTED_MODULE_3__.CONFIG.DoH_URL) {\n        _MapsDiscovery_instances.add(this);\n        // Root name server\n        this.rootNameserver = _config__WEBPACK_IMPORTED_MODULE_3__.CONFIG.DoH_URL;\n        // Queue for name servers to maintain discovered name servers\n        this.nameserverQueue = new NameserverQueue();\n        // Name-based filter to apply to the list of servers\n        // Default is to accept all names\n        this.nameFilter = (name) => true;\n        // Currently discovered map servers dictionary with the domain name as the key\n        this.mapServers = {};\n        // Currently active server that is being used for localization\n        this.activeServer = null;\n        // Acceptable error in meters. If the error is higher than this value,\n        // relocation/map discovery is triggered.\n        this.errorThreshold_m = 1;\n        // Server confidence threshold. If the server confidence is lower than this value,\n        //  relocation/map discovery is triggered.\n        // NOTE: Preference is always given to errorThreshold_m to make the decision.\n        //  serverConfidenceThreshold is used only if errorThreshold_m is not set (eg. VIO pose not passed in).\n        this.serverConfidenceThreshold = 300;\n        // Localization round. This is used to keep track of the number of localizations.\n        // This is used to make sure that the localization is not done multiple times for a single data blob.\n        // It is incremented whenever the localize function is called.\n        this.currentLocalizationID = 0;\n        this.suffix = suffix;\n        this.rootNameserver = rootNameserver;\n    }\n    setServerConfidenceThreshold(serverConfidenceThreshold) {\n        this.serverConfidenceThreshold = serverConfidenceThreshold;\n    }\n    setErrorThreshold(errorThreshold_m) {\n        this.errorThreshold_m = errorThreshold_m;\n    }\n    /**\n     *\n     * @param lat Latitude\n     * @param lon Longitude\n     * @param error_m Error in meters\n     * @param suffix The suffix to append to the geo domains.\n     *\n     * @returns Domains to query for the given location.\n     */\n    discoverMapServers(lat_1, lon_1, error_m_1) {\n        return __awaiter(this, arguments, void 0, function* (lat, lon, error_m, altitude = _config__WEBPACK_IMPORTED_MODULE_3__.CONFIG.UNKOWN_ALTITUDE_CODE, exploreUnknownAltitude = false, suffix = this.suffix) {\n            // Add the root name server to the queue if it is empty\n            if (this.nameserverQueue.isEmpty()) {\n                let rootNameserverObj = new Nameserver(this.rootNameserver);\n                this.nameserverQueue.add(rootNameserverObj);\n            }\n            while (!this.nameserverQueue.isEmpty()) {\n                let nameserver = this.nameserverQueue.get();\n                if (nameserver === null) {\n                    break;\n                }\n                yield this.discoverMapsInNameserver(lat, lon, error_m, suffix, nameserver, altitude, exploreUnknownAltitude);\n            }\n            return this.mapServers;\n        });\n    }\n    discoverMapsInNameserver(lat_1, lon_1, error_m_1, suffix_1, nameserver_1) {\n        return __awaiter(this, arguments, void 0, function* (lat, lon, error_m, suffix, nameserver, altitude = _config__WEBPACK_IMPORTED_MODULE_3__.CONFIG.UNKOWN_ALTITUDE_CODE, exploreUnknownAltitude = false) {\n            const geoDomains = yield _location_to_geo_domain__WEBPACK_IMPORTED_MODULE_1__.LocationToGeoDomain.getGeoDomains(lat, lon, error_m, suffix, altitude, exploreUnknownAltitude);\n            let dnsLookupPromises = {};\n            // Run all DNS lookups in parallel\n            for (const domain of geoDomains) {\n                dnsLookupPromises[domain] = nameserver.lookup(domain, 'TXT');\n            }\n            for (const domain in dnsLookupPromises) {\n                let dnsLookupResults = yield dnsLookupPromises[domain];\n                for (const record of dnsLookupResults) {\n                    yield this.updateMapServersFromDNSRecord(record);\n                }\n            }\n            return this.mapServers;\n        });\n    }\n    updateMapServersFromDNSRecord(record) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!('data' in record)) {\n                return;\n            }\n            // Parse the data field as JSON\n            let recordData = record.data;\n            // Convert the format in the TXT record to json format.\n            // The format in the DNS record is: \"key1@value1#key2@value2#...\"\n            let jsonString = recordData\n                .replace(/([a-zA-Z]+)@([a-zA-Z0-9\\\\/:$,._-]+)/g, '\"$1\":\"$2\"')\n                .replace(/#/g, ',');\n            jsonString = `{${jsonString}}`;\n            let recordDataJSON = JSON.parse(jsonString);\n            // Update map servers list if the record is of type MCNAME\n            if (recordDataJSON.type === 'MCNAME') {\n                let name = recordDataJSON.data;\n                if (name in this.mapServers) {\n                    return; // Already discovered. Do not add again.\n                }\n                if (this.nameFilter(name)) {\n                    try {\n                        let mapServer = new _localization_map_server__WEBPACK_IMPORTED_MODULE_2__.MapServer(name);\n                        yield mapServer.queryCapabilities();\n                        this.mapServers[name] = mapServer;\n                    }\n                    catch (error) {\n                        // If there is an error, the map server is not added to the list\n                        (0,_utils_log__WEBPACK_IMPORTED_MODULE_4__.consoleLog)(error, 'error');\n                    }\n                }\n            }\n            // Update the name server queue if the record is of type MNS\n            if (recordDataJSON.type === 'MNS') {\n                let name = recordDataJSON.data;\n                if (name.endsWith('.')) {\n                    name = name.slice(0, -1);\n                }\n                if (this.nameFilter(name)) {\n                    let nameserver = new Nameserver(`https://${name}`);\n                    this.nameserverQueue.add(nameserver);\n                }\n            }\n        });\n    }\n    // Returns true if result1 is better than result2 in terms of errors/confidence\n    isBetter(localization1, localization2) {\n        // If result2 is null, result1 is better.\n        if (localization2 === null) {\n            return true;\n        }\n        if ('errorWithVIO' in localization1 || 'errorWithVIO' in localization2) {\n            // Compare the errors only if neither is Infinity\n            if (localization1.errorWithVIO !== Infinity && localization2.errorWithVIO !== Infinity) {\n                return localization1.errorWithVIO < localization2.errorWithVIO;\n            }\n            // Check if either is Infinity. If so, the other is better.\n            if (localization1.errorWithVIO === Infinity && localization2.errorWithVIO !== Infinity) {\n                return false;\n            }\n            else if (localization2.errorWithVIO === Infinity && localization1.errorWithVIO !== Infinity) {\n                return true;\n            }\n        }\n        if ('serverConfidence' in localization1 && 'serverConfidence' in localization2) {\n            return localization1.serverConfidence > localization2.serverConfidence;\n        }\n        // if neither errorWithVIO nor serverConfidence is available, it's not possile to compare,\n        // so return true. This is quite arbitrary.\n        return true;\n    }\n    isServerAcceptable(mapServer) {\n        if (mapServer === null) {\n            return false;\n        }\n        let latestLocalizationData = mapServer.getLatestLocalizationData();\n        if (latestLocalizationData === null) {\n            return false;\n        }\n        if ('errorWithVIO' in latestLocalizationData) {\n            return latestLocalizationData.errorWithVIO < this.errorThreshold_m;\n        }\n        if ('serverConfidence' in latestLocalizationData) {\n            return latestLocalizationData.serverConfidence > this.serverConfidenceThreshold;\n        }\n        // If neither errorWithVIO nor serverConfidence is available\n        // we cannot make a decision, so return true as it has some localization data\n        return true;\n    }\n    /*\n    * Disocver and localize against the map servers.\n    *\n    * Try to continue using the active server.\n    * If the localization error is too high, try to localize against the currently discovered servers.\n    * If the localization error is still too high, re-initialize the discovery process.\n    */\n    localize(lat_1, lon_1, error_m_1, dataBlob_1, localizationType_1) {\n        return __awaiter(this, arguments, void 0, function* (lat, lon, error_m, dataBlob, localizationType, vioPose = null, altitude = _config__WEBPACK_IMPORTED_MODULE_3__.CONFIG.UNKOWN_ALTITUDE_CODE, exploreUnknownAltitude = false, suffix = this.suffix) {\n            this.currentLocalizationID += 1;\n            // If the current map server list is empty, discover map servers\n            // and return the best possible server\n            if ((Object.keys(this.mapServers).length === 0)\n                || (this.activeServer === null)) {\n                (0,_utils_log__WEBPACK_IMPORTED_MODULE_4__.consoleLog)('Discovering map servers as the current list is empty', 'debug');\n                yield this.discoverMapServers(lat, lon, error_m, altitude, exploreUnknownAltitude, suffix);\n                let bestServer = yield __classPrivateFieldGet(this, _MapsDiscovery_instances, \"m\", _MapsDiscovery_relocalizeWithinDiscoveredServers).call(this, dataBlob, localizationType, vioPose);\n                this.activeServer = bestServer;\n                return __classPrivateFieldGet(this, _MapsDiscovery_instances, \"m\", _MapsDiscovery_raiseEventAndReturn).call(this, this.activeServer);\n            }\n            // If active server is not null, localize against the active server first.\n            (0,_utils_log__WEBPACK_IMPORTED_MODULE_4__.consoleLog)('Localizing against the active server', 'debug');\n            yield this.activeServer.localize(dataBlob, localizationType, vioPose, this.currentLocalizationID);\n            if (this.isServerAcceptable(this.activeServer)) {\n                (0,_utils_log__WEBPACK_IMPORTED_MODULE_4__.consoleLog)('Active server is acceptable', 'debug');\n                return __classPrivateFieldGet(this, _MapsDiscovery_instances, \"m\", _MapsDiscovery_raiseEventAndReturn).call(this, this.activeServer, MapEvents.goodMapFound);\n            }\n            // If the localization error is too high, relocalize against the discovered servers.\n            (0,_utils_log__WEBPACK_IMPORTED_MODULE_4__.consoleLog)('Active server is not acceptable. So relocalizing against the discovered servers', 'debug');\n            let bestServer = yield __classPrivateFieldGet(this, _MapsDiscovery_instances, \"m\", _MapsDiscovery_relocalizeWithinDiscoveredServers).call(this, dataBlob, localizationType, vioPose);\n            if (this.isServerAcceptable(bestServer)) {\n                this.activeServer = bestServer;\n                return __classPrivateFieldGet(this, _MapsDiscovery_instances, \"m\", _MapsDiscovery_raiseEventAndReturn).call(this, this.activeServer, MapEvents.goodMapFound);\n            }\n            // If the localization error is still too high, re-initialize the discovery process.\n            // This time, just return the best possible server.\n            (0,_utils_log__WEBPACK_IMPORTED_MODULE_4__.consoleLog)('Localization error is still too high. Re-initializing the discovery process', 'debug');\n            yield this.discoverMapServers(lat, lon, error_m, altitude, exploreUnknownAltitude, suffix);\n            (0,_utils_log__WEBPACK_IMPORTED_MODULE_4__.consoleLog)('Relocalizing against the discovered servers', 'debug');\n            bestServer = yield __classPrivateFieldGet(this, _MapsDiscovery_instances, \"m\", _MapsDiscovery_relocalizeWithinDiscoveredServers).call(this, dataBlob, localizationType, vioPose);\n            this.activeServer = bestServer;\n            return __classPrivateFieldGet(this, _MapsDiscovery_instances, \"m\", _MapsDiscovery_raiseEventAndReturn).call(this, this.activeServer);\n        });\n    }\n}\n_MapsDiscovery_instances = new WeakSet(), _MapsDiscovery_relocalizeWithinDiscoveredServers = function _MapsDiscovery_relocalizeWithinDiscoveredServers(dataBlob_1, localizationType_1) {\n    return __awaiter(this, arguments, void 0, function* (dataBlob, localizationType, vioPose = null) {\n        (0,_utils_log__WEBPACK_IMPORTED_MODULE_4__.consoleLog)('Relocalizing within the discovered servers', 'debug');\n        // Filter out servers that do not support the localization type\n        // and any excluded server\n        let mapServersFiltered = {};\n        for (let name in this.mapServers) {\n            let server = this.mapServers[name];\n            if (server.capabilities.includes(localizationType)) {\n                mapServersFiltered[name] = server;\n            }\n        }\n        (0,_utils_log__WEBPACK_IMPORTED_MODULE_4__.consoleLog)(`Filtered servers: ${Object.keys(mapServersFiltered).join(', ')}`, 'debug');\n        // Run all localizations in parallel\n        let nameToLocalizationPromises = {};\n        for (let name in mapServersFiltered) {\n            let server = mapServersFiltered[name];\n            let latestLocalizationData = server.getLatestLocalizationData();\n            let isCallLocalize = false;\n            // Localize if the server has no localization data.\n            if (latestLocalizationData === null || latestLocalizationData.localizationID === null) {\n                isCallLocalize = true;\n            }\n            // Localize if the server has localization data that is older than the current localization ID.\n            else if (latestLocalizationData.localizationID < this.currentLocalizationID) {\n                isCallLocalize = true;\n            }\n            if (isCallLocalize) {\n                (0,_utils_log__WEBPACK_IMPORTED_MODULE_4__.consoleLog)(`Localizing against ${name}`, 'debug');\n                nameToLocalizationPromises[name] = server.localize(dataBlob, localizationType, vioPose, this.currentLocalizationID);\n            }\n            else {\n                (0,_utils_log__WEBPACK_IMPORTED_MODULE_4__.consoleLog)(`Not localizing against ${name} as the localization data is up-to-date`, 'debug');\n                nameToLocalizationPromises[name] = Promise.resolve(latestLocalizationData);\n            }\n        }\n        // Get the localization results\n        let bestLocalizationData = null;\n        let bestServer = null;\n        for (let name in nameToLocalizationPromises) {\n            let localizationData = yield nameToLocalizationPromises[name];\n            if (this.isBetter(localizationData, bestLocalizationData)) {\n                bestLocalizationData = localizationData;\n                bestServer = mapServersFiltered[name];\n            }\n        }\n        return bestServer;\n    });\n}, _MapsDiscovery_raiseEventAndReturn = function _MapsDiscovery_raiseEventAndReturn(mapServer, event = null) {\n    if (event === null) {\n        if (mapServer === null) {\n            event = MapEvents.noMapFound;\n        }\n        else if (this.isServerAcceptable(mapServer)) {\n            event = MapEvents.goodMapFound;\n        }\n        else {\n            event = MapEvents.poorMapFound;\n        }\n    }\n    _utils_events__WEBPACK_IMPORTED_MODULE_5__[\"default\"].emit(event);\n    return mapServer;\n};\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/discovery/maps-discovery.ts?")},"./src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DNS: () => (/* reexport safe */ _discovery_dns__WEBPACK_IMPORTED_MODULE_0__.DNS),\n/* harmony export */   Events: () => (/* reexport safe */ _utils_events__WEBPACK_IMPORTED_MODULE_5__["default"]),\n/* harmony export */   LocationToGeoDomain: () => (/* reexport safe */ _discovery_location_to_geo_domain__WEBPACK_IMPORTED_MODULE_1__.LocationToGeoDomain),\n/* harmony export */   MapServer: () => (/* reexport safe */ _localization_map_server__WEBPACK_IMPORTED_MODULE_3__.MapServer),\n/* harmony export */   MapsDiscovery: () => (/* reexport safe */ _discovery_maps_discovery__WEBPACK_IMPORTED_MODULE_2__.MapsDiscovery),\n/* harmony export */   axios: () => (/* reexport safe */ _utils_axiosInstance__WEBPACK_IMPORTED_MODULE_4__["default"]),\n/* harmony export */   exportedForTesting: () => (/* binding */ exportedForTesting)\n/* harmony export */ });\n/* harmony import */ var _discovery_dns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./discovery/dns */ "./src/discovery/dns.ts");\n/* harmony import */ var _discovery_location_to_geo_domain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./discovery/location-to-geo-domain */ "./src/discovery/location-to-geo-domain.ts");\n/* harmony import */ var _discovery_maps_discovery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./discovery/maps-discovery */ "./src/discovery/maps-discovery.ts");\n/* harmony import */ var _localization_map_server__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./localization/map-server */ "./src/localization/map-server.ts");\n/* harmony import */ var _utils_axiosInstance__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/axiosInstance */ "./src/utils/axiosInstance.ts");\n/* harmony import */ var _utils_events__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/events */ "./src/utils/events.ts");\n/* harmony import */ var _circle_coverer_circle_coverer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./circle-coverer/circle-coverer */ "./src/circle-coverer/circle-coverer.ts");\n/* harmony import */ var _utils_s2_conversions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/s2-conversions */ "./src/utils/s2-conversions.ts");\n\n\n\n\n\n\n// Imports for testing\n\n\nvar exportedForTesting = {\n    s2CircleCoverer: _circle_coverer_circle_coverer__WEBPACK_IMPORTED_MODULE_6__.s2CircleCoverer,\n    tokenToDomainDigits: _utils_s2_conversions__WEBPACK_IMPORTED_MODULE_7__.tokenToDomainDigits\n};\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/index.ts?')},"./src/localization/localize.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   errorWithVIO: () => (/* binding */ errorWithVIO),\n/* harmony export */   queryLocalize: () => (/* binding */ queryLocalize)\n/* harmony export */ });\n/* harmony import */ var _utils_axiosInstance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/axiosInstance */ "./src/utils/axiosInstance.ts");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nfunction queryLocalize(mapServer, dataBlob, localizationType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let responseData = null;\n        const url = `https://${mapServer.name}/localize/${localizationType}`;\n        // Send dataBlob to the server for localization\n        const formData = new FormData();\n        formData.append(localizationType, dataBlob);\n        try {\n            let response = yield _utils_axiosInstance__WEBPACK_IMPORTED_MODULE_0__["default"].post(url, formData);\n            responseData = response.data;\n        }\n        catch (error) {\n            // If there is an error, null is returned.\n        }\n        return responseData;\n    });\n}\nfunction subtract(a, b) {\n    return a.map((value, index) => value - b[index]);\n}\nfunction norm(vector) {\n    return Math.sqrt(vector.reduce((acc, value) => acc + value * value, 0));\n}\nfunction abs(value) {\n    return value < 0 ? -value : value;\n}\nfunction errorWithVIO(mapServer, localizationData) {\n    let prevLocalizationData = mapServer.getLatestLocalizationData();\n    if (prevLocalizationData === null) {\n        // If there is no previous localization data, cannot calculate error.\n        return Infinity;\n    }\n    let prevPose = prevLocalizationData.pose;\n    let prevPosition = [prevPose[0][3], prevPose[1][3], prevPose[2][3]];\n    let currentPose = localizationData.pose;\n    let currentPosition = [currentPose[0][3], currentPose[1][3], currentPose[2][3]];\n    let vioPrevPose = prevLocalizationData.vioPose;\n    let vioPrevPosition = [vioPrevPose[0][3], vioPrevPose[1][3], vioPrevPose[2][3]];\n    let vioCurrentPose = localizationData.vioPose;\n    let vioCurrentPosition = [vioCurrentPose[0][3], vioCurrentPose[1][3], vioCurrentPose[2][3]];\n    let vector = subtract(currentPosition, prevPosition);\n    let vioVector = subtract(vioCurrentPosition, vioPrevPosition);\n    let vectorNorm = Number(norm(vector));\n    let vioVectorNorm = Number(norm(vioVector));\n    // Calculate the difference in lengths as length error\n    let lengthError = abs(vectorNorm - vioVectorNorm);\n    return lengthError;\n}\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/localization/localize.ts?')},"./src/localization/map-server.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapServer: () => (/* binding */ MapServer)\n/* harmony export */ });\n/* harmony import */ var _utils_axiosInstance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/axiosInstance */ "./src/utils/axiosInstance.ts");\n/* harmony import */ var _localize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./localize */ "./src/localization/localize.ts");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n;\n;\n/**\n * Represents a map server. It has all the metadata and data associated with a map server.\n * The poses returned by the map server along with thieir errors are stored in this object.\n */\nclass MapServer {\n    constructor(name) {\n        // List of waypoints in the map.\n        this.waypointsList = [];\n        // The list of capabilities supported by the map server.\n        this.capabilities = [];\n        // History of localziation data returned by the map server.\n        // The last entry is the most recent data.\n        this.localizationDataList = [];\n        this.name = name;\n    }\n    // Get server capabilities\n    queryCapabilities() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `https://${this.name}/capabilities`;\n            try {\n                const response = yield _utils_axiosInstance__WEBPACK_IMPORTED_MODULE_0__["default"].get(url);\n                this.capabilities = response.data;\n            }\n            catch (error) {\n                // If there is an error, capabilities remains as it was before.\n            }\n            return this.capabilities;\n        });\n    }\n    queryWaypoints() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = `https://${this.name}/waypoints`;\n            try {\n                const response = yield _utils_axiosInstance__WEBPACK_IMPORTED_MODULE_0__["default"].get(url);\n                this.waypointsList = response.data;\n            }\n            catch (error) {\n                // If there is an error, waypointsList remains as it was before.\n            }\n            return this.waypointsList;\n        });\n    }\n    localize(dataBlob_1, localizationType_1) {\n        return __awaiter(this, arguments, void 0, function* (dataBlob, localizationType, currentVIOPose = null, localizationID = null) {\n            if (this.capabilities.length === 0) {\n                yield this.queryCapabilities();\n            }\n            if (!this.capabilities.includes(localizationType)) {\n                throw new Error(`Localization type ${localizationType} is not supported by ${this.name}.`);\n            }\n            const localizationResponse = yield (0,_localize__WEBPACK_IMPORTED_MODULE_1__.queryLocalize)(this, dataBlob, localizationType);\n            if (localizationResponse === null) {\n                throw new Error(`Localization failed for ${this.name}.`);\n            }\n            // Store the localization data in the object.\n            const pose = localizationResponse.pose;\n            const localizationData = {\n                pose: pose\n            };\n            if (\'confidence\' in localizationResponse) {\n                localizationData.serverConfidence = localizationResponse.confidence;\n            }\n            if (currentVIOPose) {\n                localizationData.vioPose = currentVIOPose;\n                let error = (0,_localize__WEBPACK_IMPORTED_MODULE_1__.errorWithVIO)(this, localizationData);\n                localizationData.errorWithVIO = error;\n            }\n            if (localizationID !== null) {\n                localizationData.localizationID = localizationID;\n            }\n            this.localizationDataList.push(localizationData);\n            return localizationData;\n        });\n    }\n    // Get the latest localization data.\n    getLatestLocalizationData() {\n        if (this.localizationDataList.length === 0) {\n            return null;\n        }\n        return this.localizationDataList[this.localizationDataList.length - 1];\n    }\n}\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/localization/map-server.ts?')},"./src/utils/axiosInstance.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/lib/axios.js");\n\nvar axiosInstance = axios__WEBPACK_IMPORTED_MODULE_0__["default"].create();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (axiosInstance);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/utils/axiosInstance.ts?')},"./src/utils/events.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ "./node_modules/events/events.js");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n\nconst Events = new (events__WEBPACK_IMPORTED_MODULE_0___default())();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Events);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/utils/events.ts?')},"./src/utils/log.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   consoleLog: () => (/* binding */ consoleLog)\n/* harmony export */ });\nfunction consoleLog(msg, level) {\n    if (true) {\n        console.log(msg); // Log all irrespective of level\n    }\n    else {}\n}\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/utils/log.ts?")},"./src/utils/s2-conversions.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   tokenToDomainDigits: () => (/* binding */ tokenToDomainDigits)\n/* harmony export */ });\n/* harmony import */ var _wasm_load_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasm/load-wasm */ \"./src/utils/wasm/load-wasm.ts\");\n/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./log */ \"./src/utils/log.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n/*\n * S2 hex token -> domain digits\n */\nfunction tokenToDomainDigits(s2Token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (typeof s2TokenToBinaryIDGo === 'undefined') {\n            (0,_log__WEBPACK_IMPORTED_MODULE_1__.consoleLog)(\"Loading WASM\", \"debug\");\n            yield (0,_wasm_load_wasm__WEBPACK_IMPORTED_MODULE_0__.loadCircleCovererWasm)();\n        }\n        let binaryID = s2TokenToBinaryIDGo(s2Token); // go function\n        let domainDigits = binaryIDToDomainDigits(binaryID);\n        return domainDigits;\n    });\n}\n/*\n * S2 binary ID -> Domain digits\n */\nfunction binaryIDToDomainDigits(binaryID) {\n    // Format of S2 Cell ID from http://s2geometry.io/devguide/s2cell_hierarchy.html\n    // s = [face] [child]^k 1 0^(60-2k)\n    // [face] - 3 bits. [child] - 2 bits each.\n    // Pad with 0s to make it 64 bits\n    binaryID = binaryID.padStart(64, '0');\n    // Remove trailing 0s and 1\n    binaryID = binaryID.slice(0, binaryID.lastIndexOf('1'));\n    // Face is the first 3 bits\n    let face = parseInt(binaryID.slice(0, 3), 2).toString();\n    let domainDigits = [face];\n    // The hierarchy is the rest of the bits\n    let hierarchy = parseInt(binaryID.slice(3), 2).toString(4);\n    let expectedLength = (binaryID.length - 3) / 2; // 3 face bits. 2 bits per level.\n    hierarchy = hierarchy.padStart(expectedLength, '0');\n    let hierarchySplit = hierarchy.split('');\n    domainDigits = domainDigits.concat(hierarchySplit);\n    domainDigits.reverse();\n    return domainDigits;\n}\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/utils/s2-conversions.ts?")},"./src/utils/wasm/load-wasm.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadCircleCovererWasm: () => (/* binding */ loadCircleCovererWasm)\n/* harmony export */ });\n/* harmony import */ var _wasm_exec_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./wasm_exec.js */ "./src/utils/wasm/wasm_exec.js");\n/* harmony import */ var _wasm_exec_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_wasm_exec_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _s2_circle_coverer_wasm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./s2-circle-coverer.wasm */ "./src/utils/wasm/s2-circle-coverer.wasm");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\nfunction base64ToArrayBuffer(base64) {\n    var binaryString = atob(base64);\n    var bytes = new Uint8Array(binaryString.length);\n    for (var i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\nfunction loadCircleCovererWasm() {\n    return __awaiter(this, void 0, void 0, function* () {\n        const go = new Go();\n        const result = yield WebAssembly.instantiate(base64ToArrayBuffer(_s2_circle_coverer_wasm__WEBPACK_IMPORTED_MODULE_1__), go.importObject);\n        go.run(result.instance);\n    });\n}\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/utils/wasm/load-wasm.ts?')},"./src/utils/wasm/wasm_exec.js":(module,__unused_webpack_exports,__webpack_require__)=>{eval('/* module decorator */ module = __webpack_require__.nmd(module);\n// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n//\n// This file has been modified for use by the TinyGo compiler.\n\n(() => {\n\t// Map multiple JavaScript environments to a single common API,\n\t// preferring web standards over Node.js API.\n\t//\n\t// Environments considered:\n\t// - Browsers\n\t// - Node.js\n\t// - Electron\n\t// - Parcel\n\n\tif (typeof __webpack_require__.g !== "undefined") {\n\t\t// global already exists\n\t} else if (typeof window !== "undefined") {\n\t\twindow.global = window;\n\t} else if (typeof self !== "undefined") {\n\t\tself.global = self;\n\t} else {\n\t\tthrow new Error("cannot export Go (neither global, window nor self is defined)");\n\t}\n\n\tif (!__webpack_require__.g.require && "function" !== "undefined") {\n\t\t__webpack_require__.g.require = __webpack_require__("./src/utils/wasm sync recursive");\n\t}\n\n\tconst enosys = () => {\n\t\tconst err = new Error("not implemented");\n\t\terr.code = "ENOSYS";\n\t\treturn err;\n\t};\n\tlet outputBuf = "";\n\t__webpack_require__.g.fs = {\n\t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n\t\twriteSync(fd, buf) {\n\t\t\toutputBuf += decoder.decode(buf);\n\t\t\tconst nl = outputBuf.lastIndexOf("\\n");\n\t\t\tif (nl != -1) {\n\t\t\t\tconsole.log(outputBuf.substr(0, nl));\n\t\t\t\toutputBuf = outputBuf.substr(nl + 1);\n\t\t\t}\n\t\t\treturn buf.length;\n\t\t},\n\t\twrite(fd, buf, offset, length, position, callback) {\n\t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t\t\t\tcallback(enosys());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst n = this.writeSync(fd, buf);\n\t\t\tcallback(null, n);\n\t\t},\n\t\tchmod(path, mode, callback) { callback(enosys()); },\n\t\tchown(path, uid, gid, callback) { callback(enosys()); },\n\t\tclose(fd, callback) { callback(enosys()); },\n\t\tfchmod(fd, mode, callback) { callback(enosys()); },\n\t\tfchown(fd, uid, gid, callback) { callback(enosys()); },\n\t\tfstat(fd, callback) { callback(enosys()); },\n\t\tfsync(fd, callback) { callback(null); },\n\t\tftruncate(fd, length, callback) { callback(enosys()); },\n\t\tlchown(path, uid, gid, callback) { callback(enosys()); },\n\t\tlink(path, link, callback) { callback(enosys()); },\n\t\tlstat(path, callback) { callback(enosys()); },\n\t\tmkdir(path, perm, callback) { callback(enosys()); },\n\t\topen(path, flags, mode, callback) { callback(enosys()); },\n\t\tread(fd, buffer, offset, length, position, callback) { callback(enosys()); },\n\t\treaddir(path, callback) { callback(enosys()); },\n\t\treadlink(path, callback) { callback(enosys()); },\n\t\trename(from, to, callback) { callback(enosys()); },\n\t\trmdir(path, callback) { callback(enosys()); },\n\t\tstat(path, callback) { callback(enosys()); },\n\t\tsymlink(path, link, callback) { callback(enosys()); },\n\t\ttruncate(path, length, callback) { callback(enosys()); },\n\t\tunlink(path, callback) { callback(enosys()); },\n\t\tutimes(path, atime, mtime, callback) { callback(enosys()); },\n\t};\n\n\tif (!__webpack_require__.g.process) {\n\t\t__webpack_require__.g.process = {\n\t\t\tgetuid() { return -1; },\n\t\t\tgetgid() { return -1; },\n\t\t\tgeteuid() { return -1; },\n\t\t\tgetegid() { return -1; },\n\t\t\tgetgroups() { throw enosys(); },\n\t\t\tpid: -1,\n\t\t\tppid: -1,\n\t\t\tumask() { throw enosys(); },\n\t\t\tcwd() { throw enosys(); },\n\t\t\tchdir() { throw enosys(); },\n\t\t}\n\t}\n\n\tif (!__webpack_require__.g.performance) {\n\t\t__webpack_require__.g.performance = {\n\t\t\tnow() {\n\t\t\t\tconst [sec, nsec] = process.hrtime();\n\t\t\t\treturn sec * 1000 + nsec / 1000000;\n\t\t\t},\n\t\t};\n\t}\n\n\t// End of polyfills for common API.\n\n\tconst encoder = new TextEncoder("utf-8");\n\tconst decoder = new TextDecoder("utf-8");\n\tlet reinterpretBuf = new DataView(new ArrayBuffer(8));\n\tvar logLine = [];\n\n\t__webpack_require__.g.Go = class {\n\t\tconstructor() {\n\t\t\tthis._callbackTimeouts = new Map();\n\t\t\tthis._nextCallbackTimeoutID = 1;\n\n\t\t\tconst mem = () => {\n\t\t\t\t// The buffer may change when requesting more memory.\n\t\t\t\treturn new DataView(this._inst.exports.memory.buffer);\n\t\t\t}\n\n\t\t\tconst unboxValue = (v_ref) => {\n\t\t\t\treinterpretBuf.setBigInt64(0, v_ref, true);\n\t\t\t\tconst f = reinterpretBuf.getFloat64(0, true);\n\t\t\t\tif (f === 0) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (!isNaN(f)) {\n\t\t\t\t\treturn f;\n\t\t\t\t}\n\n\t\t\t\tconst id = v_ref & 0xffffffffn;\n\t\t\t\treturn this._values[id];\n\t\t\t}\n\n\n\t\t\tconst loadValue = (addr) => {\n\t\t\t\tlet v_ref = mem().getBigUint64(addr, true);\n\t\t\t\treturn unboxValue(v_ref);\n\t\t\t}\n\n\t\t\tconst boxValue = (v) => {\n\t\t\t\tconst nanHead = 0x7FF80000n;\n\n\t\t\t\tif (typeof v === "number") {\n\t\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\t\treturn nanHead << 32n;\n\t\t\t\t\t}\n\t\t\t\t\tif (v === 0) {\n\t\t\t\t\t\treturn (nanHead << 32n) | 1n;\n\t\t\t\t\t}\n\t\t\t\t\treinterpretBuf.setFloat64(0, v, true);\n\t\t\t\t\treturn reinterpretBuf.getBigInt64(0, true);\n\t\t\t\t}\n\n\t\t\t\tswitch (v) {\n\t\t\t\t\tcase undefined:\n\t\t\t\t\t\treturn 0n;\n\t\t\t\t\tcase null:\n\t\t\t\t\t\treturn (nanHead << 32n) | 2n;\n\t\t\t\t\tcase true:\n\t\t\t\t\t\treturn (nanHead << 32n) | 3n;\n\t\t\t\t\tcase false:\n\t\t\t\t\t\treturn (nanHead << 32n) | 4n;\n\t\t\t\t}\n\n\t\t\t\tlet id = this._ids.get(v);\n\t\t\t\tif (id === undefined) {\n\t\t\t\t\tid = this._idPool.pop();\n\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\tid = BigInt(this._values.length);\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[id] = v;\n\t\t\t\t\tthis._goRefCounts[id] = 0;\n\t\t\t\t\tthis._ids.set(v, id);\n\t\t\t\t}\n\t\t\t\tthis._goRefCounts[id]++;\n\t\t\t\tlet typeFlag = 1n;\n\t\t\t\tswitch (typeof v) {\n\t\t\t\t\tcase "string":\n\t\t\t\t\t\ttypeFlag = 2n;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase "symbol":\n\t\t\t\t\t\ttypeFlag = 3n;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase "function":\n\t\t\t\t\t\ttypeFlag = 4n;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn id | ((nanHead | typeFlag) << 32n);\n\t\t\t}\n\n\t\t\tconst storeValue = (addr, v) => {\n\t\t\t\tlet v_ref = boxValue(v);\n\t\t\t\tmem().setBigUint64(addr, v_ref, true);\n\t\t\t}\n\n\t\t\tconst loadSlice = (array, len, cap) => {\n\t\t\t\treturn new Uint8Array(this._inst.exports.memory.buffer, array, len);\n\t\t\t}\n\n\t\t\tconst loadSliceOfValues = (array, len, cap) => {\n\t\t\t\tconst a = new Array(len);\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\tconst loadString = (ptr, len) => {\n\t\t\t\treturn decoder.decode(new DataView(this._inst.exports.memory.buffer, ptr, len));\n\t\t\t}\n\n\t\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\tthis.importObject = {\n\t\t\t\twasi_snapshot_preview1: {\n\t\t\t\t\t// https://github.com/WebAssembly/WASI/blob/main/phases/snapshot/docs.md#fd_write\n\t\t\t\t\tfd_write: function (fd, iovs_ptr, iovs_len, nwritten_ptr) {\n\t\t\t\t\t\tlet nwritten = 0;\n\t\t\t\t\t\tif (fd == 1) {\n\t\t\t\t\t\t\tfor (let iovs_i = 0; iovs_i < iovs_len; iovs_i++) {\n\t\t\t\t\t\t\t\tlet iov_ptr = iovs_ptr + iovs_i * 8; // assuming wasm32\n\t\t\t\t\t\t\t\tlet ptr = mem().getUint32(iov_ptr + 0, true);\n\t\t\t\t\t\t\t\tlet len = mem().getUint32(iov_ptr + 4, true);\n\t\t\t\t\t\t\t\tnwritten += len;\n\t\t\t\t\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\t\t\t\t\tlet c = mem().getUint8(ptr + i);\n\t\t\t\t\t\t\t\t\tif (c == 13) { // CR\n\t\t\t\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t\t\t\t} else if (c == 10) { // LF\n\t\t\t\t\t\t\t\t\t\t// write line\n\t\t\t\t\t\t\t\t\t\tlet line = decoder.decode(new Uint8Array(logLine));\n\t\t\t\t\t\t\t\t\t\tlogLine = [];\n\t\t\t\t\t\t\t\t\t\tconsole.log(line);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tlogLine.push(c);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.error(\'invalid file descriptor:\', fd);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmem().setUint32(nwritten_ptr, nwritten, true);\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t},\n\t\t\t\t\tfd_close: () => 0,      // dummy\n\t\t\t\t\tfd_fdstat_get: () => 0, // dummy\n\t\t\t\t\tfd_seek: () => 0,       // dummy\n\t\t\t\t\t"proc_exit": (code) => {\n\t\t\t\t\t\tif (__webpack_require__.g.process) {\n\t\t\t\t\t\t\t// Node.js\n\t\t\t\t\t\t\tprocess.exit(code);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Can\'t exit in a browser.\n\t\t\t\t\t\t\tthrow \'trying to exit with code \' + code;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\trandom_get: (bufPtr, bufLen) => {\n\t\t\t\t\t\tcrypto.getRandomValues(loadSlice(bufPtr, bufLen));\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tgojs: {\n\t\t\t\t\t// func ticks() float64\n\t\t\t\t\t"runtime.ticks": () => {\n\t\t\t\t\t\treturn timeOrigin + performance.now();\n\t\t\t\t\t},\n\n\t\t\t\t\t// func sleepTicks(timeout float64)\n\t\t\t\t\t"runtime.sleepTicks": (timeout) => {\n\t\t\t\t\t\t// Do not sleep, only reactivate scheduler after the given timeout.\n\t\t\t\t\t\tsetTimeout(this._inst.exports.go_scheduler, timeout);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func finalizeRef(v ref)\n\t\t\t\t\t"syscall/js.finalizeRef": (v_ref) => {\n\t\t\t\t\t\t// Note: TinyGo does not support finalizers so this should never be\n\t\t\t\t\t\t// called.\n\n\t\t\t\t\t\t// Commented the below code. But it\'s a memory leak.\n\t\t\t\t\t\t// Issue: https://github.com/tinygo-org/tinygo/issues/1140\n\n\t\t\t\t\t\t// console.error(\'syscall/js.finalizeRef not implemented\');\n\t\t\t\t\t},\n\n\t\t\t\t\t// func stringVal(value string) ref\n\t\t\t\t\t"syscall/js.stringVal": (value_ptr, value_len) => {\n\t\t\t\t\t\tconst s = loadString(value_ptr, value_len);\n\t\t\t\t\t\treturn boxValue(s);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\t\t"syscall/js.valueGet": (v_ref, p_ptr, p_len) => {\n\t\t\t\t\t\tlet prop = loadString(p_ptr, p_len);\n\t\t\t\t\t\tlet v = unboxValue(v_ref);\n\t\t\t\t\t\tlet result = Reflect.get(v, prop);\n\t\t\t\t\t\treturn boxValue(result);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\t\t"syscall/js.valueSet": (v_ref, p_ptr, p_len, x_ref) => {\n\t\t\t\t\t\tconst v = unboxValue(v_ref);\n\t\t\t\t\t\tconst p = loadString(p_ptr, p_len);\n\t\t\t\t\t\tconst x = unboxValue(x_ref);\n\t\t\t\t\t\tReflect.set(v, p, x);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueDelete(v ref, p string)\n\t\t\t\t\t"syscall/js.valueDelete": (v_ref, p_ptr, p_len) => {\n\t\t\t\t\t\tconst v = unboxValue(v_ref);\n\t\t\t\t\t\tconst p = loadString(p_ptr, p_len);\n\t\t\t\t\t\tReflect.deleteProperty(v, p);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\t\t"syscall/js.valueIndex": (v_ref, i) => {\n\t\t\t\t\t\treturn boxValue(Reflect.get(unboxValue(v_ref), i));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\t\t"syscall/js.valueSetIndex": (v_ref, i, x_ref) => {\n\t\t\t\t\t\tReflect.set(unboxValue(v_ref), i, unboxValue(x_ref));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\t\t"syscall/js.valueCall": (ret_addr, v_ref, m_ptr, m_len, args_ptr, args_len, args_cap) => {\n\t\t\t\t\t\tconst v = unboxValue(v_ref);\n\t\t\t\t\t\tconst name = loadString(m_ptr, m_len);\n\t\t\t\t\t\tconst args = loadSliceOfValues(args_ptr, args_len, args_cap);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst m = Reflect.get(v, name);\n\t\t\t\t\t\t\tstoreValue(ret_addr, Reflect.apply(m, v, args));\n\t\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(ret_addr, err);\n\t\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\t\t"syscall/js.valueInvoke": (ret_addr, v_ref, args_ptr, args_len, args_cap) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = unboxValue(v_ref);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(args_ptr, args_len, args_cap);\n\t\t\t\t\t\t\tstoreValue(ret_addr, Reflect.apply(v, undefined, args));\n\t\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(ret_addr, err);\n\t\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\t\t"syscall/js.valueNew": (ret_addr, v_ref, args_ptr, args_len, args_cap) => {\n\t\t\t\t\t\tconst v = unboxValue(v_ref);\n\t\t\t\t\t\tconst args = loadSliceOfValues(args_ptr, args_len, args_cap);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstoreValue(ret_addr, Reflect.construct(v, args));\n\t\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tstoreValue(ret_addr, err);\n\t\t\t\t\t\t\tmem().setUint8(ret_addr + 8, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueLength(v ref) int\n\t\t\t\t\t"syscall/js.valueLength": (v_ref) => {\n\t\t\t\t\t\treturn unboxValue(v_ref).length;\n\t\t\t\t\t},\n\n\t\t\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\t\t"syscall/js.valuePrepareString": (ret_addr, v_ref) => {\n\t\t\t\t\t\tconst s = String(unboxValue(v_ref));\n\t\t\t\t\t\tconst str = encoder.encode(s);\n\t\t\t\t\t\tstoreValue(ret_addr, str);\n\t\t\t\t\t\tmem().setInt32(ret_addr + 8, str.length, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\t\t"syscall/js.valueLoadString": (v_ref, slice_ptr, slice_len, slice_cap) => {\n\t\t\t\t\t\tconst str = unboxValue(v_ref);\n\t\t\t\t\t\tloadSlice(slice_ptr, slice_len, slice_cap).set(str);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\t\t"syscall/js.valueInstanceOf": (v_ref, t_ref) => {\n\t\t\t\t\t\treturn unboxValue(v_ref) instanceof unboxValue(t_ref);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToGo(dst []byte, src ref) (int, bool)\n\t\t\t\t\t"syscall/js.copyBytesToGo": (ret_addr, dest_addr, dest_len, dest_cap, src_ref) => {\n\t\t\t\t\t\tlet num_bytes_copied_addr = ret_addr;\n\t\t\t\t\t\tlet returned_status_addr = ret_addr + 4; // Address of returned boolean status variable\n\n\t\t\t\t\t\tconst dst = loadSlice(dest_addr, dest_len);\n\t\t\t\t\t\tconst src = unboxValue(src_ref);\n\t\t\t\t\t\tif (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tmem().setUint8(returned_status_addr, 0); // Return "not ok" status\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tmem().setUint32(num_bytes_copied_addr, toCopy.length, true);\n\t\t\t\t\t\tmem().setUint8(returned_status_addr, 1); // Return "ok" status\n\t\t\t\t\t},\n\n\t\t\t\t\t// copyBytesToJS(dst ref, src []byte) (int, bool)\n\t\t\t\t\t// Originally copied from upstream Go project, then modified:\n\t\t\t\t\t//   https://github.com/golang/go/blob/3f995c3f3b43033013013e6c7ccc93a9b1411ca9/misc/wasm/wasm_exec.js#L404-L416\n\t\t\t\t\t"syscall/js.copyBytesToJS": (ret_addr, dst_ref, src_addr, src_len, src_cap) => {\n\t\t\t\t\t\tlet num_bytes_copied_addr = ret_addr;\n\t\t\t\t\t\tlet returned_status_addr = ret_addr + 4; // Address of returned boolean status variable\n\n\t\t\t\t\t\tconst dst = unboxValue(dst_ref);\n\t\t\t\t\t\tconst src = loadSlice(src_addr, src_len);\n\t\t\t\t\t\tif (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tmem().setUint8(returned_status_addr, 0); // Return "not ok" status\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tmem().setUint32(num_bytes_copied_addr, toCopy.length, true);\n\t\t\t\t\t\tmem().setUint8(returned_status_addr, 1); // Return "ok" status\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Go 1.20 uses \'env\'. Go 1.21 uses \'gojs\'.\n\t\t\t// For compatibility, we use both as long as Go 1.20 is supported.\n\t\t\tthis.importObject.env = this.importObject.gojs;\n\t\t}\n\n\t\tasync run(instance) {\n\t\t\tthis._inst = instance;\n\t\t\tthis._values = [ // JS values that Go currently has references to, indexed by reference id\n\t\t\t\tNaN,\n\t\t\t\t0,\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\t__webpack_require__.g,\n\t\t\t\tthis,\n\t\t\t];\n\t\t\tthis._goRefCounts = []; // number of references that Go has to a JS value, indexed by reference id\n\t\t\tthis._ids = new Map();  // mapping from JS values to reference ids\n\t\t\tthis._idPool = [];      // unused ids that have been garbage collected\n\t\t\tthis.exited = false;    // whether the Go program has exited\n\n\t\t\twhile (true) {\n\t\t\t\tconst callbackPromise = new Promise((resolve) => {\n\t\t\t\t\tthis._resolveCallbackPromise = () => {\n\t\t\t\t\t\tif (this.exited) {\n\t\t\t\t\t\t\tthrow new Error("bad callback: Go program has already exited");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetTimeout(resolve, 0); // make sure it is asynchronous\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tthis._inst.exports._start();\n\t\t\t\tif (this.exited) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tawait callbackPromise;\n\t\t\t}\n\t\t}\n\n\t\t_resume() {\n\t\t\tif (this.exited) {\n\t\t\t\tthrow new Error("Go program has already exited");\n\t\t\t}\n\t\t\tthis._inst.exports.resume();\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t}\n\n\t\t_makeFuncWrapper(id) {\n\t\t\tconst go = this;\n\t\t\treturn function () {\n\t\t\t\tconst event = { id: id, this: this, args: arguments };\n\t\t\t\tgo._pendingEvent = event;\n\t\t\t\tgo._resume();\n\t\t\t\treturn event.result;\n\t\t\t};\n\t\t}\n\t}\n\n\tif (\n\t\t__webpack_require__.g.require &&\n\t\t__webpack_require__.g.require.main === module &&\n\t\t__webpack_require__.g.process &&\n\t\t__webpack_require__.g.process.versions &&\n\t\t!__webpack_require__.g.process.versions.electron\n\t) {\n\t\tif (process.argv.length != 3) {\n\t\t\tconsole.error("usage: go_js_wasm_exec [wasm binary] [arguments]");\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tconst go = new Go();\n\t\tWebAssembly.instantiate(fs.readFileSync(process.argv[2]), go.importObject).then((result) => {\n\t\t\treturn go.run(result.instance);\n\t\t}).catch((err) => {\n\t\t\tconsole.error(err);\n\t\t\tprocess.exit(1);\n\t\t});\n\t}\n})();\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/utils/wasm/wasm_exec.js?')},"./src/utils/wasm sync recursive":module=>{eval('function webpackEmptyContext(req) {\n\tvar e = new Error("Cannot find module \'" + req + "\'");\n\te.code = \'MODULE_NOT_FOUND\';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = "./src/utils/wasm sync recursive";\nmodule.exports = webpackEmptyContext;\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/utils/wasm/_sync?')},"./src/utils/wasm/s2-circle-coverer.wasm":module=>{"use strict";eval('module.exports = "";\n\n//# sourceURL=webpack://dnsspatialdiscovery/./src/utils/wasm/s2-circle-coverer.wasm?')},"./node_modules/axios/lib/adapters/adapters.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");\n/* harmony import */ var _http_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./http.js */ "./node_modules/axios/lib/helpers/null.js");\n/* harmony import */ var _xhr_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./xhr.js */ "./node_modules/axios/lib/adapters/xhr.js");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fetch.js */ "./node_modules/axios/lib/adapters/fetch.js");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");\n\n\n\n\n\n\nconst knownAdapters = {\n  http: _http_js__WEBPACK_IMPORTED_MODULE_0__["default"],\n  xhr: _xhr_js__WEBPACK_IMPORTED_MODULE_1__["default"],\n  fetch: _fetch_js__WEBPACK_IMPORTED_MODULE_2__["default"]\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_3__["default"].forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, \'name\', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, \'adapterName\', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => _utils_js__WEBPACK_IMPORTED_MODULE_3__["default"].isFunction(adapter) || adapter === null || adapter === false;\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  getAdapter: (adapters) => {\n    adapters = _utils_js__WEBPACK_IMPORTED_MODULE_3__["default"].isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__["default"](`Unknown adapter \'${id}\'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || \'#\' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? \'is not supported by the environment\' : \'is not available in the build\')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? \'since :\\n\' + reasons.map(renderReason).join(\'\\n\') : \' \' + renderReason(reasons[0])) :\n        \'as no adapter specified\';\n\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_4__["default"](\n        `There is no suitable adapter to dispatch the request ` + s,\n        \'ERR_NOT_SUPPORT\'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n});\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/adapters/adapters.js?')},"./node_modules/axios/lib/adapters/fetch.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ "./node_modules/axios/lib/platform/index.js");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");\n/* harmony import */ var _helpers_composeSignals_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/composeSignals.js */ "./node_modules/axios/lib/helpers/composeSignals.js");\n/* harmony import */ var _helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/trackStream.js */ "./node_modules/axios/lib/helpers/trackStream.js");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");\n/* harmony import */ var _helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/progressEventReducer.js */ "./node_modules/axios/lib/helpers/progressEventReducer.js");\n/* harmony import */ var _helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/resolveConfig.js */ "./node_modules/axios/lib/helpers/resolveConfig.js");\n/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/settle.js */ "./node_modules/axios/lib/core/settle.js");\n\n\n\n\n\n\n\n\n\n\nconst fetchProgressDecorator = (total, fn) => {\n  const lengthComputable = total != null;\n  return (loaded) => setTimeout(() => fn({\n    lengthComputable,\n    total,\n    loaded\n  }));\n}\n\nconst isFetchSupported = typeof fetch === \'function\' && typeof Request === \'function\' && typeof Response === \'function\';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === \'function\';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === \'function\' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst supportsRequestStream = isReadableStreamSupported && (() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(_platform_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].origin, {\n    body: new ReadableStream(),\n    method: \'POST\',\n    get duplex() {\n      duplexAccessed = true;\n      return \'half\';\n    },\n  }).headers.has(\'Content-Type\');\n\n  return duplexAccessed && !hasContentType;\n})();\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported && !!(()=> {\n  try {\n    return _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isReadableStream(new Response(\'\').body);\n  } catch(err) {\n    // return undefined\n  }\n})();\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  [\'text\', \'arrayBuffer\', \'blob\', \'formData\', \'stream\'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__["default"](`Response type \'${type}\' is not supported`, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__["default"].ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isBlob(body)) {\n    return body.size;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isSpecCompliantForm(body)) {\n    return (await new Request(body).arrayBuffer()).byteLength;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isArrayBufferView(body)) {\n    return body.byteLength;\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isURLSearchParams(body)) {\n    body = body + \'\';\n  }\n\n  if(_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = \'same-origin\',\n    fetchOptions\n  } = (0,_helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_3__["default"])(config);\n\n  responseType = responseType ? (responseType + \'\').toLowerCase() : \'text\';\n\n  let [composedSignal, stopTimeout] = (signal || cancelToken || timeout) ?\n    (0,_helpers_composeSignals_js__WEBPACK_IMPORTED_MODULE_4__["default"])([signal, cancelToken], timeout) : [];\n\n  let finished, request;\n\n  const onFinish = () => {\n    !finished && setTimeout(() => {\n      composedSignal && composedSignal.unsubscribe();\n    });\n\n    finished = true;\n  }\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== \'get\' && method !== \'head\' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: \'POST\',\n        body: data,\n        duplex: "half"\n      });\n\n      let contentTypeHeader;\n\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isFormData(data) && (contentTypeHeader = _request.headers.get(\'content-type\'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        data = (0,_helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_5__.trackStream)(_request.body, DEFAULT_CHUNK_SIZE, fetchProgressDecorator(\n          requestContentLength,\n          (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__["default"])(onUploadProgress)\n        ), null, encodeText);\n      }\n    }\n\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isString(withCredentials)) {\n      withCredentials = withCredentials ? \'cors\' : \'omit\';\n    }\n\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: "half",\n      withCredentials\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === \'stream\' || responseType === \'response\');\n\n    if (supportsResponseStream && (onDownloadProgress || isStreamResponse)) {\n      const options = {};\n\n      [\'status\', \'statusText\', \'headers\'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].toFiniteNumber(response.headers.get(\'content-length\'));\n\n      response = new Response(\n        (0,_helpers_trackStream_js__WEBPACK_IMPORTED_MODULE_5__.trackStream)(response.body, DEFAULT_CHUNK_SIZE, onDownloadProgress && fetchProgressDecorator(\n          responseContentLength,\n          (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__["default"])(onDownloadProgress, true)\n        ), isStreamResponse && onFinish, encodeText),\n        options\n      );\n    }\n\n    responseType = responseType || \'text\';\n\n    let responseData = await resolvers[_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].findKey(resolvers, responseType) || \'text\'](response, config);\n\n    !isStreamResponse && onFinish();\n\n    stopTimeout && stopTimeout();\n\n    return await new Promise((resolve, reject) => {\n      (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_7__["default"])(resolve, reject, {\n        data: responseData,\n        headers: _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_8__["default"].from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    onFinish();\n\n    if (err && err.name === \'TypeError\' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__["default"](\'Network Error\', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__["default"].ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__["default"].from(err, err && err.code, config, request);\n  }\n}));\n\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/adapters/fetch.js?')},"./node_modules/axios/lib/adapters/xhr.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../utils.js */ "./node_modules/axios/lib/utils.js");\n/* harmony import */ var _core_settle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../core/settle.js */ "./node_modules/axios/lib/core/settle.js");\n/* harmony import */ var _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../defaults/transitional.js */ "./node_modules/axios/lib/defaults/transitional.js");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../cancel/CanceledError.js */ "./node_modules/axios/lib/cancel/CanceledError.js");\n/* harmony import */ var _helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/parseProtocol.js */ "./node_modules/axios/lib/helpers/parseProtocol.js");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../platform/index.js */ "./node_modules/axios/lib/platform/index.js");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");\n/* harmony import */ var _helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/progressEventReducer.js */ "./node_modules/axios/lib/helpers/progressEventReducer.js");\n/* harmony import */ var _helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/resolveConfig.js */ "./node_modules/axios/lib/helpers/resolveConfig.js");\n\n\n\n\n\n\n\n\n\n\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== \'undefined\';\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = (0,_helpers_resolveConfig_js__WEBPACK_IMPORTED_MODULE_0__["default"])(config);\n    let requestData = _config.data;\n    const requestHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__["default"].from(_config.headers).normalize();\n    let {responseType} = _config;\n    let onCanceled;\n    function done() {\n      if (_config.cancelToken) {\n        _config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (_config.signal) {\n        _config.signal.removeEventListener(\'abort\', onCanceled);\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__["default"].from(\n        \'getAllResponseHeaders\' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === \'text\' || responseType === \'json\' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      (0,_core_settle_js__WEBPACK_IMPORTED_MODULE_2__["default"])(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if (\'onloadend\' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn\'t get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it\'s a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf(\'file:\') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next \'tick\'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"](\'Request aborted\', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"].ECONNABORTED, _config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it\'s a network error\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"](\'Network Error\', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"].ERR_NETWORK, _config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? \'timeout of \' + _config.timeout + \'ms exceeded\' : \'timeout exceeded\';\n      const transitional = _config.transitional || _defaults_transitional_js__WEBPACK_IMPORTED_MODULE_4__["default"];\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"](\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"].ETIMEDOUT : _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"].ECONNABORTED,\n        _config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if (\'setRequestHeader\' in request) {\n      _utils_js__WEBPACK_IMPORTED_MODULE_5__["default"].forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_5__["default"].isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== \'json\') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof _config.onDownloadProgress === \'function\') {\n      request.addEventListener(\'progress\', (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__["default"])(_config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof _config.onUploadProgress === \'function\' && request.upload) {\n      request.upload.addEventListener(\'progress\', (0,_helpers_progressEventReducer_js__WEBPACK_IMPORTED_MODULE_6__["default"])(_config.onUploadProgress));\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_7__["default"](null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener(\'abort\', onCanceled);\n      }\n    }\n\n    const protocol = (0,_helpers_parseProtocol_js__WEBPACK_IMPORTED_MODULE_8__["default"])(_config.url);\n\n    if (protocol && _platform_index_js__WEBPACK_IMPORTED_MODULE_9__["default"].protocols.indexOf(protocol) === -1) {\n      reject(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"](\'Unsupported protocol \' + protocol + \':\', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_3__["default"].ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n});\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/adapters/xhr.js?')},"./node_modules/axios/lib/axios.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ "./node_modules/axios/lib/utils.js");\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers/bind.js */ "./node_modules/axios/lib/helpers/bind.js");\n/* harmony import */ var _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core/Axios.js */ "./node_modules/axios/lib/core/Axios.js");\n/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/mergeConfig.js */ "./node_modules/axios/lib/core/mergeConfig.js");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaults/index.js */ "./node_modules/axios/lib/defaults/index.js");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./helpers/formDataToJSON.js */ "./node_modules/axios/lib/helpers/formDataToJSON.js");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cancel/CanceledError.js */ "./node_modules/axios/lib/cancel/CanceledError.js");\n/* harmony import */ var _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./cancel/CancelToken.js */ "./node_modules/axios/lib/cancel/CancelToken.js");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cancel/isCancel.js */ "./node_modules/axios/lib/cancel/isCancel.js");\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./env/data.js */ "./node_modules/axios/lib/env/data.js");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./helpers/toFormData.js */ "./node_modules/axios/lib/helpers/toFormData.js");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");\n/* harmony import */ var _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./helpers/spread.js */ "./node_modules/axios/lib/helpers/spread.js");\n/* harmony import */ var _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./helpers/isAxiosError.js */ "./node_modules/axios/lib/helpers/isAxiosError.js");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./core/AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");\n/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./adapters/adapters.js */ "./node_modules/axios/lib/adapters/adapters.js");\n/* harmony import */ var _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./helpers/HttpStatusCode.js */ "./node_modules/axios/lib/helpers/HttpStatusCode.js");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__["default"](defaultConfig);\n  const instance = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_core_Axios_js__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.request, context);\n\n  // Copy axios.prototype to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(instance, _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__["default"].prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__["default"].extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance((0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__["default"])(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(_defaults_index_js__WEBPACK_IMPORTED_MODULE_4__["default"]);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = _core_Axios_js__WEBPACK_IMPORTED_MODULE_0__["default"];\n\n// Expose Cancel & CancelToken\naxios.CanceledError = _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_5__["default"];\naxios.CancelToken = _cancel_CancelToken_js__WEBPACK_IMPORTED_MODULE_6__["default"];\naxios.isCancel = _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_7__["default"];\naxios.VERSION = _env_data_js__WEBPACK_IMPORTED_MODULE_8__.VERSION;\naxios.toFormData = _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_9__["default"];\n\n// Expose AxiosError class\naxios.AxiosError = _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_10__["default"];\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = _helpers_spread_js__WEBPACK_IMPORTED_MODULE_11__["default"];\n\n// Expose isAxiosError\naxios.isAxiosError = _helpers_isAxiosError_js__WEBPACK_IMPORTED_MODULE_12__["default"];\n\n// Expose mergeConfig\naxios.mergeConfig = _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_3__["default"];\n\naxios.AxiosHeaders = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_13__["default"];\n\naxios.formToJSON = thing => (0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_14__["default"])(_utils_js__WEBPACK_IMPORTED_MODULE_2__["default"].isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_15__["default"].getAdapter;\n\naxios.HttpStatusCode = _helpers_HttpStatusCode_js__WEBPACK_IMPORTED_MODULE_16__["default"];\n\naxios.default = axios;\n\n// this module should only have a default export\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (axios);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/axios.js?')},"./node_modules/axios/lib/cancel/CancelToken.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CanceledError.js */ "./node_modules/axios/lib/cancel/CanceledError.js");\n\n\n\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== \'function\') {\n      throw new TypeError(\'executor must be a function.\');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new _CanceledError_js__WEBPACK_IMPORTED_MODULE_0__["default"](message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CancelToken);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/cancel/CancelToken.js?')},"./node_modules/axios/lib/cancel/CanceledError.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");\n\n\n\n\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"].call(this, message == null ? \'canceled\' : message, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"].ERR_CANCELED, config, request);\n  this.name = \'CanceledError\';\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].inherits(CanceledError, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"], {\n  __CANCEL__: true\n});\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanceledError);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/cancel/CanceledError.js?')},"./node_modules/axios/lib/cancel/isCancel.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ isCancel)\n/* harmony export */ });\n\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/cancel/isCancel.js?')},"./node_modules/axios/lib/core/Axios.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../utils.js */ "./node_modules/axios/lib/utils.js");\n/* harmony import */ var _helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/buildURL.js */ "./node_modules/axios/lib/helpers/buildURL.js");\n/* harmony import */ var _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InterceptorManager.js */ "./node_modules/axios/lib/core/InterceptorManager.js");\n/* harmony import */ var _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dispatchRequest.js */ "./node_modules/axios/lib/core/dispatchRequest.js");\n/* harmony import */ var _mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mergeConfig.js */ "./node_modules/axios/lib/core/mergeConfig.js");\n/* harmony import */ var _buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./buildFullPath.js */ "./node_modules/axios/lib/core/buildFullPath.js");\n/* harmony import */ var _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/validator.js */ "./node_modules/axios/lib/helpers/validator.js");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");\n\n\n\n\n\n\n\n\n\n\n\nconst validators = _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__["default"].validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__["default"](),\n      response: new _InterceptorManager_js__WEBPACK_IMPORTED_MODULE_1__["default"]()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, \'\') : \'\';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, \'\'))) {\n            err.stack += \'\\n\' + stack\n          }\n        } catch (e) {\n          // ignore the case where "stack" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios(\'example/url\'[, config]) a la fetch API\n    if (typeof configOrUrl === \'string\') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__["default"])(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__["default"].assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_3__["default"].isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        _helpers_validator_js__WEBPACK_IMPORTED_MODULE_0__["default"].assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || \'get\').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && _utils_js__WEBPACK_IMPORTED_MODULE_3__["default"].merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && _utils_js__WEBPACK_IMPORTED_MODULE_3__["default"].forEach(\n      [\'delete\', \'get\', \'head\', \'post\', \'put\', \'patch\', \'common\'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_4__["default"].concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === \'function\' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [_dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__["default"].bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = _dispatchRequest_js__WEBPACK_IMPORTED_MODULE_5__["default"].call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = (0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__["default"])(this.defaults, config);\n    const fullPath = (0,_buildFullPath_js__WEBPACK_IMPORTED_MODULE_6__["default"])(config.baseURL, config.url);\n    return (0,_helpers_buildURL_js__WEBPACK_IMPORTED_MODULE_7__["default"])(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\n_utils_js__WEBPACK_IMPORTED_MODULE_3__["default"].forEach([\'delete\', \'get\', \'head\', \'options\'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__["default"])(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\n_utils_js__WEBPACK_IMPORTED_MODULE_3__["default"].forEach([\'post\', \'put\', \'patch\'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request((0,_mergeConfig_js__WEBPACK_IMPORTED_MODULE_2__["default"])(config || {}, {\n        method,\n        headers: isForm ? {\n          \'Content-Type\': \'multipart/form-data\'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + \'Form\'] = generateHTTPMethod(true);\n});\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Axios);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/core/Axios.js?')},"./node_modules/axios/lib/core/AxiosError.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AxiosError);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/core/AxiosError.js?")},"./node_modules/axios/lib/core/AxiosHeaders.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");\n/* harmony import */ var _helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/parseHeaders.js */ "./node_modules/axios/lib/helpers/parseHeaders.js");\n\n\n\n\n\nconst $internals = Symbol(\'internals\');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&\'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(value)) return;\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].toCamelCase(\' \' + header);\n\n  [\'get\', \'set\', \'has\'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error(\'header name must be a non-empty string\');\n      }\n\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders((0,_helpers_parseHeaders_js__WEBPACK_IMPORTED_MODULE_1__["default"])(header), valueOrRewrite);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError(\'parser must be boolean|regexp|function\');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(this, (value, header) => {\n      const key = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(value) ? value.join(\', \') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + \': \' + value).join(\'\\n\');\n  }\n\n  get [Symbol.toStringTag]() {\n    return \'AxiosHeaders\';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor([\'Content-Type\', \'Content-Length\', \'Accept\', \'Accept-Encoding\', \'User-Agent\', \'Authorization\']);\n\n// reserved names hotfix\n_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].freezeMethods(AxiosHeaders);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AxiosHeaders);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/core/AxiosHeaders.js?')},"./node_modules/axios/lib/core/InterceptorManager.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ "./node_modules/axios/lib/utils.js");\n\n\n\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (InterceptorManager);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/core/InterceptorManager.js?')},"./node_modules/axios/lib/core/buildFullPath.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ buildFullPath)\n/* harmony export */ });\n/* harmony import */ var _helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/isAbsoluteURL.js */ "./node_modules/axios/lib/helpers/isAbsoluteURL.js");\n/* harmony import */ var _helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/combineURLs.js */ "./node_modules/axios/lib/helpers/combineURLs.js");\n\n\n\n\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !(0,_helpers_isAbsoluteURL_js__WEBPACK_IMPORTED_MODULE_0__["default"])(requestedURL)) {\n    return (0,_helpers_combineURLs_js__WEBPACK_IMPORTED_MODULE_1__["default"])(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/core/buildFullPath.js?')},"./node_modules/axios/lib/core/dispatchRequest.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ dispatchRequest)\n/* harmony export */ });\n/* harmony import */ var _transformData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transformData.js */ "./node_modules/axios/lib/core/transformData.js");\n/* harmony import */ var _cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../cancel/isCancel.js */ "./node_modules/axios/lib/cancel/isCancel.js");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../defaults/index.js */ "./node_modules/axios/lib/defaults/index.js");\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cancel/CanceledError.js */ "./node_modules/axios/lib/cancel/CanceledError.js");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");\n/* harmony import */ var _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../adapters/adapters.js */ "./node_modules/axios/lib/adapters/adapters.js");\n\n\n\n\n\n\n\n\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_0__["default"](null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__["default"].from(config.headers);\n\n  // Transform request data\n  config.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__["default"].call(\n    config,\n    config.transformRequest\n  );\n\n  if ([\'post\', \'put\', \'patch\'].indexOf(config.method) !== -1) {\n    config.headers.setContentType(\'application/x-www-form-urlencoded\', false);\n  }\n\n  const adapter = _adapters_adapters_js__WEBPACK_IMPORTED_MODULE_3__["default"].getAdapter(config.adapter || _defaults_index_js__WEBPACK_IMPORTED_MODULE_4__["default"].adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__["default"].call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__["default"].from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!(0,_cancel_isCancel_js__WEBPACK_IMPORTED_MODULE_5__["default"])(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = _transformData_js__WEBPACK_IMPORTED_MODULE_2__["default"].call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__["default"].from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/core/dispatchRequest.js?')},"./node_modules/axios/lib/core/mergeConfig.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ mergeConfig)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");\n/* harmony import */ var _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");\n\n\n\n\n\nconst headersToObject = (thing) => thing instanceof _AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isPlainObject(target) && _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].merge.call({caseless}, target, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isPlainObject(source)) {\n      return _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].merge({}, source);\n    } else if (_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (_utils_js__WEBPACK_IMPORTED_MODULE_1__["default"].isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/core/mergeConfig.js?')},"./node_modules/axios/lib/core/settle.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ settle)\n/* harmony export */ });\n/* harmony import */ var _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");\n\n\n\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"](\n      \'Request failed with status code \' + response.status,\n      [_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"].ERR_BAD_REQUEST, _AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"].ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/core/settle.js?')},"./node_modules/axios/lib/core/transformData.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ transformData)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../utils.js */ "./node_modules/axios/lib/utils.js");\n/* harmony import */ var _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../defaults/index.js */ "./node_modules/axios/lib/defaults/index.js");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");\n\n\n\n\n\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || _defaults_index_js__WEBPACK_IMPORTED_MODULE_0__["default"];\n  const context = response || config;\n  const headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__["default"].from(context.headers);\n  let data = context.data;\n\n  _utils_js__WEBPACK_IMPORTED_MODULE_2__["default"].forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/core/transformData.js?')},"./node_modules/axios/lib/defaults/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");\n/* harmony import */ var _transitional_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./transitional.js */ "./node_modules/axios/lib/defaults/transitional.js");\n/* harmony import */ var _helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/toFormData.js */ "./node_modules/axios/lib/helpers/toFormData.js");\n/* harmony import */ var _helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/toURLEncodedForm.js */ "./node_modules/axios/lib/helpers/toURLEncodedForm.js");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../platform/index.js */ "./node_modules/axios/lib/platform/index.js");\n/* harmony import */ var _helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/formDataToJSON.js */ "./node_modules/axios/lib/helpers/formDataToJSON.js");\n\n\n\n\n\n\n\n\n\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].trim(rawValue);\n    } catch (e) {\n      if (e.name !== \'SyntaxError\') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: _transitional_js__WEBPACK_IMPORTED_MODULE_1__["default"],\n\n  adapter: [\'xhr\', \'http\', \'fetch\'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || \'\';\n    const hasJSONContentType = contentType.indexOf(\'application/json\') > -1;\n    const isObjectPayload = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isObject(data);\n\n    if (isObjectPayload && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify((0,_helpers_formDataToJSON_js__WEBPACK_IMPORTED_MODULE_2__["default"])(data)) : data;\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArrayBuffer(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isBuffer(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isStream(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFile(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isBlob(data) ||\n      _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isURLSearchParams(data)) {\n      headers.setContentType(\'application/x-www-form-urlencoded;charset=utf-8\', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf(\'application/x-www-form-urlencoded\') > -1) {\n        return (0,_helpers_toURLEncodedForm_js__WEBPACK_IMPORTED_MODULE_3__["default"])(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFileList(data)) || contentType.indexOf(\'multipart/form-data\') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return (0,_helpers_toFormData_js__WEBPACK_IMPORTED_MODULE_4__["default"])(\n          isFileList ? {\'files[]\': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType(\'application/json\', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === \'json\';\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isResponse(data) || _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === \'SyntaxError\') {\n            throw _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__["default"].from(e, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_5__["default"].ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: \'XSRF-TOKEN\',\n  xsrfHeaderName: \'X-XSRF-TOKEN\',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: _platform_index_js__WEBPACK_IMPORTED_MODULE_6__["default"].classes.FormData,\n    Blob: _platform_index_js__WEBPACK_IMPORTED_MODULE_6__["default"].classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      \'Accept\': \'application/json, text/plain, */*\',\n      \'Content-Type\': undefined\n    }\n  }\n};\n\n_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach([\'delete\', \'get\', \'head\', \'post\', \'put\', \'patch\'], (method) => {\n  defaults.headers[method] = {};\n});\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (defaults);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/defaults/index.js?')},"./node_modules/axios/lib/defaults/transitional.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n});\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/defaults/transitional.js?')},"./node_modules/axios/lib/env/data.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: () => (/* binding */ VERSION)\n/* harmony export */ });\nconst VERSION = "1.7.2";\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/env/data.js?')},"./node_modules/axios/lib/helpers/AxiosURLSearchParams.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ \"./node_modules/axios/lib/helpers/toFormData.js\");\n\n\n\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AxiosURLSearchParams);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/AxiosURLSearchParams.js?")},"./node_modules/axios/lib/helpers/HttpStatusCode.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HttpStatusCode);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/HttpStatusCode.js?')},"./node_modules/axios/lib/helpers/bind.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ bind)\n/* harmony export */ });\n\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/bind.js?')},"./node_modules/axios/lib/helpers/buildURL.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ buildURL)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/AxiosURLSearchParams.js */ \"./node_modules/axios/lib/helpers/AxiosURLSearchParams.js\");\n\n\n\n\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isURLSearchParams(params) ?\n      params.toString() :\n      new _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/buildURL.js?")},"./node_modules/axios/lib/helpers/combineURLs.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ combineURLs)\n/* harmony export */ });\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/combineURLs.js?")},"./node_modules/axios/lib/helpers/composeSignals.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cancel/CanceledError.js */ "./node_modules/axios/lib/cancel/CanceledError.js");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");\n\n\n\nconst composeSignals = (signals, timeout) => {\n  let controller = new AbortController();\n\n  let aborted;\n\n  const onabort = function (cancel) {\n    if (!aborted) {\n      aborted = true;\n      unsubscribe();\n      const err = cancel instanceof Error ? cancel : this.reason;\n      controller.abort(err instanceof _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"] ? err : new _cancel_CanceledError_js__WEBPACK_IMPORTED_MODULE_1__["default"](err instanceof Error ? err.message : err));\n    }\n  }\n\n  let timer = timeout && setTimeout(() => {\n    onabort(new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"](`timeout ${timeout} of ms exceeded`, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_0__["default"].ETIMEDOUT))\n  }, timeout)\n\n  const unsubscribe = () => {\n    if (signals) {\n      timer && clearTimeout(timer);\n      timer = null;\n      signals.forEach(signal => {\n        signal &&\n        (signal.removeEventListener ? signal.removeEventListener(\'abort\', onabort) : signal.unsubscribe(onabort));\n      });\n      signals = null;\n    }\n  }\n\n  signals.forEach((signal) => signal && signal.addEventListener && signal.addEventListener(\'abort\', onabort));\n\n  const {signal} = controller;\n\n  signal.unsubscribe = unsubscribe;\n\n  return [signal, () => {\n    timer && clearTimeout(timer);\n    timer = null;\n  }];\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (composeSignals);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/composeSignals.js?')},"./node_modules/axios/lib/helpers/cookies.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(path) && cookie.push('path=' + path);\n\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  });\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/cookies.js?")},"./node_modules/axios/lib/helpers/formDataToJSON.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");\n\n\n\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `[\'foo\', \'x\', \'y\', \'z\']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === \'[]\' ? \'\' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === \'__proto__\') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFormData(formData) && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFunction(formData.entries)) {\n    const obj = {};\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (formDataToJSON);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/formDataToJSON.js?')},"./node_modules/axios/lib/helpers/isAbsoluteURL.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ isAbsoluteURL)\n/* harmony export */ });\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/isAbsoluteURL.js?')},"./node_modules/axios/lib/helpers/isAxiosError.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ isAxiosError)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ "./node_modules/axios/lib/utils.js");\n\n\n\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isObject(payload) && (payload.isAxiosError === true);\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/isAxiosError.js?')},"./node_modules/axios/lib/helpers/isURLSameOrigin.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/index.js */ \"./node_modules/axios/lib/platform/index.js\");\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_platform_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (_utils_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })());\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/isURLSameOrigin.js?")},"./node_modules/axios/lib/helpers/null.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// eslint-disable-next-line strict\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (null);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/null.js?')},"./node_modules/axios/lib/helpers/parseHeaders.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../utils.js */ \"./node_modules/axios/lib/utils.js\");\n\n\n\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = _utils_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n});\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/parseHeaders.js?")},"./node_modules/axios/lib/helpers/parseProtocol.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parseProtocol)\n/* harmony export */ });\n\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/parseProtocol.js?")},"./node_modules/axios/lib/helpers/progressEventReducer.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _speedometer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./speedometer.js */ "./node_modules/axios/lib/helpers/speedometer.js");\n/* harmony import */ var _throttle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./throttle.js */ "./node_modules/axios/lib/helpers/throttle.js");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = (0,_speedometer_js__WEBPACK_IMPORTED_MODULE_0__["default"])(50, 250);\n\n  return (0,_throttle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null\n    };\n\n    data[isDownloadStream ? \'download\' : \'upload\'] = true;\n\n    listener(data);\n  }, freq);\n});\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/progressEventReducer.js?')},"./node_modules/axios/lib/helpers/resolveConfig.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../platform/index.js */ "./node_modules/axios/lib/platform/index.js");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");\n/* harmony import */ var _isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isURLSameOrigin.js */ "./node_modules/axios/lib/helpers/isURLSameOrigin.js");\n/* harmony import */ var _cookies_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./cookies.js */ "./node_modules/axios/lib/helpers/cookies.js");\n/* harmony import */ var _core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/buildFullPath.js */ "./node_modules/axios/lib/core/buildFullPath.js");\n/* harmony import */ var _core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/mergeConfig.js */ "./node_modules/axios/lib/core/mergeConfig.js");\n/* harmony import */ var _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosHeaders.js */ "./node_modules/axios/lib/core/AxiosHeaders.js");\n/* harmony import */ var _buildURL_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./buildURL.js */ "./node_modules/axios/lib/helpers/buildURL.js");\n\n\n\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((config) => {\n  const newConfig = (0,_core_mergeConfig_js__WEBPACK_IMPORTED_MODULE_0__["default"])({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = _core_AxiosHeaders_js__WEBPACK_IMPORTED_MODULE_1__["default"].from(headers);\n\n  newConfig.url = (0,_buildURL_js__WEBPACK_IMPORTED_MODULE_2__["default"])((0,_core_buildFullPath_js__WEBPACK_IMPORTED_MODULE_3__["default"])(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set(\'Authorization\', \'Basic \' +\n      btoa((auth.username || \'\') + \':\' + (auth.password ? unescape(encodeURIComponent(auth.password)) : \'\'))\n    );\n  }\n\n  let contentType;\n\n  if (_utils_js__WEBPACK_IMPORTED_MODULE_4__["default"].isFormData(data)) {\n    if (_platform_index_js__WEBPACK_IMPORTED_MODULE_5__["default"].hasStandardBrowserEnv || _platform_index_js__WEBPACK_IMPORTED_MODULE_5__["default"].hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(\';\').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || \'multipart/form-data\', ...tokens].join(\'; \'));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we\'re in a web worker, or react-native.\n\n  if (_platform_index_js__WEBPACK_IMPORTED_MODULE_5__["default"].hasStandardBrowserEnv) {\n    withXSRFToken && _utils_js__WEBPACK_IMPORTED_MODULE_4__["default"].isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && (0,_isURLSameOrigin_js__WEBPACK_IMPORTED_MODULE_6__["default"])(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && _cookies_js__WEBPACK_IMPORTED_MODULE_7__["default"].read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n});\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/resolveConfig.js?')},"./node_modules/axios/lib/helpers/speedometer.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (speedometer);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/speedometer.js?')},"./node_modules/axios/lib/helpers/spread.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ spread)\n/* harmony export */ });\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/spread.js?')},"./node_modules/axios/lib/helpers/throttle.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  const threshold = 1000 / freq;\n  let timer = null;\n  return function throttled() {\n    const force = this === true;\n\n    const now = Date.now();\n    if (force || now - timestamp > threshold) {\n      if (timer) {\n        clearTimeout(timer);\n        timer = null;\n      }\n      timestamp = now;\n      return fn.apply(null, arguments);\n    }\n    if (!timer) {\n      timer = setTimeout(() => {\n        timer = null;\n        timestamp = Date.now();\n        return fn.apply(null, arguments);\n      }, threshold - (now - timestamp));\n    }\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (throttle);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/throttle.js?')},"./node_modules/axios/lib/helpers/toFormData.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/AxiosError.js */ "./node_modules/axios/lib/core/AxiosError.js");\n/* harmony import */ var _platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/node/classes/FormData.js */ "./node_modules/axios/lib/helpers/null.js");\n\n\n\n\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\n\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isPlainObject(thing) || _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].endsWith(key, \'[]\') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? \'[\' + token + \']\' : token;\n  }).join(dots ? \'.\' : \'\');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it\'s a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].toFlatObject(_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"], {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isObject(obj)) {\n    throw new TypeError(\'target must be an object\');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (_platform_node_classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__["default"] || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== \'undefined\' && Blob;\n  const useBlob = _Blob && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isSpecCompliantForm(formData);\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFunction(visitor)) {\n    throw new TypeError(\'visitor must be a function\');\n  }\n\n  function convertValue(value) {\n    if (value === null) return \'\';\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isBlob(value)) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_2__["default"](\'Blob is not supported. Use a Buffer instead.\');\n    }\n\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArrayBuffer(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isTypedArray(value)) {\n      return useBlob && typeof Blob === \'function\' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === \'object\') {\n      if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].endsWith(key, \'{}\')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isArray(value) && isFlatArray(value)) ||\n        ((_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isFileList(value) || _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].endsWith(key, \'[]\')) && (arr = _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + \'[]\'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error(\'Circular reference detected in \' + path.join(\'.\'));\n    }\n\n    stack.push(value);\n\n    _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].forEach(value, function each(el, key) {\n      const result = !(_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isUndefined(el) || el === null) && visitor.call(\n        formData, el, _utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!_utils_js__WEBPACK_IMPORTED_MODULE_0__["default"].isObject(obj)) {\n    throw new TypeError(\'data must be an object\');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (toFormData);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/toFormData.js?')},"./node_modules/axios/lib/helpers/toURLEncodedForm.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (/* binding */ toURLEncodedForm)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ "./node_modules/axios/lib/utils.js");\n/* harmony import */ var _toFormData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toFormData.js */ "./node_modules/axios/lib/helpers/toFormData.js");\n/* harmony import */ var _platform_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../platform/index.js */ "./node_modules/axios/lib/platform/index.js");\n\n\n\n\n\n\nfunction toURLEncodedForm(data, options) {\n  return (0,_toFormData_js__WEBPACK_IMPORTED_MODULE_0__["default"])(data, new _platform_index_js__WEBPACK_IMPORTED_MODULE_1__["default"].classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (_platform_index_js__WEBPACK_IMPORTED_MODULE_1__["default"].isNode && _utils_js__WEBPACK_IMPORTED_MODULE_2__["default"].isBuffer(value)) {\n        this.append(key, value.toString(\'base64\'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/toURLEncodedForm.js?')},"./node_modules/axios/lib/helpers/trackStream.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   readBytes: () => (/* binding */ readBytes),\n/* harmony export */   streamChunk: () => (/* binding */ streamChunk),\n/* harmony export */   trackStream: () => (/* binding */ trackStream)\n/* harmony export */ });\n\n\nconst streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nconst readBytes = async function* (iterable, chunkSize, encode) {\n  for await (const chunk of iterable) {\n    yield* streamChunk(ArrayBuffer.isView(chunk) ? chunk : (await encode(String(chunk))), chunkSize);\n  }\n}\n\nconst trackStream = (stream, chunkSize, onProgress, onFinish, encode) => {\n  const iterator = readBytes(stream, chunkSize, encode);\n\n  let bytes = 0;\n\n  return new ReadableStream({\n    type: 'bytes',\n\n    async pull(controller) {\n      const {done, value} = await iterator.next();\n\n      if (done) {\n        controller.close();\n        onFinish();\n        return;\n      }\n\n      let len = value.byteLength;\n      onProgress && onProgress(bytes += len);\n      controller.enqueue(new Uint8Array(value));\n    },\n    cancel(reason) {\n      onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/trackStream.js?")},"./node_modules/axios/lib/helpers/validator.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _env_data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../env/data.js */ \"./node_modules/axios/lib/env/data.js\");\n/* harmony import */ var _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/AxiosError.js */ \"./node_modules/axios/lib/core/AxiosError.js\");\n\n\n\n\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + _env_data_js__WEBPACK_IMPORTED_MODULE_0__.VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('options must be an object', _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('option ' + opt + ' must be ' + result, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]('Unknown option ' + opt, _core_AxiosError_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ERR_BAD_OPTION);\n    }\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  assertOptions,\n  validators\n});\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/helpers/validator.js?")},"./node_modules/axios/lib/platform/browser/classes/Blob.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeof Blob !== 'undefined' ? Blob : null);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/platform/browser/classes/Blob.js?")},"./node_modules/axios/lib/platform/browser/classes/FormData.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeof FormData !== 'undefined' ? FormData : null);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/platform/browser/classes/FormData.js?")},"./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../helpers/AxiosURLSearchParams.js */ "./node_modules/axios/lib/helpers/AxiosURLSearchParams.js");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeof URLSearchParams !== \'undefined\' ? URLSearchParams : _helpers_AxiosURLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__["default"]);\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js?')},"./node_modules/axios/lib/platform/browser/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes/URLSearchParams.js */ "./node_modules/axios/lib/platform/browser/classes/URLSearchParams.js");\n/* harmony import */ var _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes/FormData.js */ "./node_modules/axios/lib/platform/browser/classes/FormData.js");\n/* harmony import */ var _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classes/Blob.js */ "./node_modules/axios/lib/platform/browser/classes/Blob.js");\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  isBrowser: true,\n  classes: {\n    URLSearchParams: _classes_URLSearchParams_js__WEBPACK_IMPORTED_MODULE_0__["default"],\n    FormData: _classes_FormData_js__WEBPACK_IMPORTED_MODULE_1__["default"],\n    Blob: _classes_Blob_js__WEBPACK_IMPORTED_MODULE_2__["default"]\n  },\n  protocols: [\'http\', \'https\', \'file\', \'blob\', \'url\', \'data\']\n});\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/platform/browser/index.js?')},"./node_modules/axios/lib/platform/common/utils.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasBrowserEnv: () => (/* binding */ hasBrowserEnv),\n/* harmony export */   hasStandardBrowserEnv: () => (/* binding */ hasStandardBrowserEnv),\n/* harmony export */   hasStandardBrowserWebWorkerEnv: () => (/* binding */ hasStandardBrowserWebWorkerEnv),\n/* harmony export */   origin: () => (/* binding */ origin)\n/* harmony export */ });\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = (\n  (product) => {\n    return hasBrowserEnv && ['ReactNative', 'NativeScript', 'NS'].indexOf(product) < 0\n  })(typeof navigator !== 'undefined' && navigator.product);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\n\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/platform/common/utils.js?")},"./node_modules/axios/lib/platform/index.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node/index.js */ "./node_modules/axios/lib/platform/browser/index.js");\n/* harmony import */ var _common_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/utils.js */ "./node_modules/axios/lib/platform/common/utils.js");\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  ..._common_utils_js__WEBPACK_IMPORTED_MODULE_0__,\n  ..._node_index_js__WEBPACK_IMPORTED_MODULE_1__["default"]\n});\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/platform/index.js?')},"./node_modules/axios/lib/utils.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers/bind.js */ \"./node_modules/axios/lib/helpers/bind.js\");\n\n\n\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = (0,_helpers_bind_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n});\n\n\n//# sourceURL=webpack://dnsspatialdiscovery/./node_modules/axios/lib/utils.js?")}},__webpack_module_cache__={};function __nested_webpack_require_1212727__(A){var B=__webpack_module_cache__[A];if(void 0!==B)return B.exports;var Q=__webpack_module_cache__[A]={id:A,loaded:!1,exports:{}};return __webpack_modules__[A](Q,Q.exports,__nested_webpack_require_1212727__),Q.loaded=!0,Q.exports}__nested_webpack_require_1212727__.n=A=>{var B=A&&A.__esModule?()=>A.default:()=>A;return __nested_webpack_require_1212727__.d(B,{a:B}),B},__nested_webpack_require_1212727__.d=(A,B)=>{for(var Q in B)__nested_webpack_require_1212727__.o(B,Q)&&!__nested_webpack_require_1212727__.o(A,Q)&&Object.defineProperty(A,Q,{enumerable:!0,get:B[Q]})},__nested_webpack_require_1212727__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(A){if("object"==typeof window)return window}}(),__nested_webpack_require_1212727__.o=(A,B)=>Object.prototype.hasOwnProperty.call(A,B),__nested_webpack_require_1212727__.r=A=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(A,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(A,"__esModule",{value:!0})},__nested_webpack_require_1212727__.nmd=A=>(A.paths=[],A.children||(A.children=[]),A);var __nested_webpack_exports__=__nested_webpack_require_1212727__("./src/index.ts");return __nested_webpack_exports__})(),module.exports=factory()}},__webpack_module_cache__={};function __webpack_require__(A){var B=__webpack_module_cache__[A];if(void 0!==B)return B.exports;var Q=__webpack_module_cache__[A]={exports:{}};return __webpack_modules__[A].call(Q.exports,Q,Q.exports,__webpack_require__),Q.exports}__webpack_require__.d=(A,B)=>{for(var Q in B)__webpack_require__.o(B,Q)&&!__webpack_require__.o(A,Q)&&Object.defineProperty(A,Q,{enumerable:!0,get:B[Q]})},__webpack_require__.o=(A,B)=>Object.prototype.hasOwnProperty.call(A,B),__webpack_require__.r=A=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(A,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(A,"__esModule",{value:!0})};var __webpack_exports__={};(()=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{exportedForTesting:()=>y});const A={map:null,currentPolygonLayer:null,currentPolygonCoords:null,s2CellsLayerGroup:null,currentS2Cells:null,setCurrentPolygonCoords(A){this.currentPolygonCoords=A.map((A=>({Lat:A.lat,Lng:A.lng}))),this.currentPolygonCoords.reverse()},currentMarkerLayer:null,currentMarkerErrorCircleLayer:null,currentGeoS2CellsLayerGroup:null};var B=__webpack_require__(844);function Q(A){return C(S2TokenToBinaryID(A))}function g(A){let B=E(A);return S2BinaryIDToToken(B)}function E(A){A.reverse();let B=A[0];B=parseInt(B).toString(2).padStart(3,"0");let Q=B;for(let B=1;B<A.length;B++)Q+=parseInt(A[B]).toString(2).padStart(2,"0");return Q+="1",Q=Q.padEnd(64,"0"),Q}function C(A){A=(A=A.padStart(64,"0")).slice(0,A.lastIndexOf("1"));let B=[parseInt(A.slice(0,3),2).toString()],Q=parseInt(A.slice(3),2).toString(4),g=(A.length-3)/2;Q=Q.padStart(g,"0");let E=Q.split("");return B=B.concat(E),B.reverse(),B}function I(A,B,Q){return Q.toString()+"."+A.join(".")+"."+B}function n(B,g="U",E=!1){if(!A.currentS2Cells)return alert("Please generate S2 cells first"),null;var C=[];for(let n in A.currentS2Cells){let A=Q(n);C.push(I(A,B,g)),E&&"U"!==g&&C.push(I(A,B,"U"))}return C}async function e(A,Q,E){var C=await B.LocationToGeoDomain.getGeoDomains(parseFloat(A),parseFloat(Q),parseFloat(E),"loc"),I={};for(let A of C){let B=A.split(".");B=B.slice(1,B.length-1),I[B.join(".")]=g(B)}return I}async function w(){let B=A.currentMarkerLayer.getLatLng(),Q=B.lat,g=B.lng,E=A.currentMarkerErrorCircleLayer.getRadius(),C=await async function(A,B,Q){let g=await e(A,B,Q),E={};for(let A in g){let B=g[A],Q=S2CellVerticesFromToken(B);E[A]=Q}return E}(Q,g,E),I=[];for(let A in C){let B=C[A].map((A=>[A.Lat,A.Lng]));B.push(B[0]);var n=L.geodesic(B,{color:"purple",fillOpacity:0,opacity:1,weight:3});I.push(n)}A.currentGeoS2CellsLayerGroup&&A.map.removeLayer(A.currentGeoS2CellsLayerGroup),A.currentGeoS2CellsLayerGroup=L.layerGroup(I),A.currentGeoS2CellsLayerGroup.addTo(A.map)}let F=function(A){let B=M(A,null,!0),Q=!1,g=!1;Q=!A.match(/^\s+/),Q?isNaN(B[1])||(g=!0):isNaN(B[0])||(g=!0);let E=0;Q&&++E,g&&++E;let C=B[E];"IN"===C&&(C=B[E+1]);let I=B.indexOf(C,Q?1:0);return 0!==I&&"IN"===B[I-1]||(B.splice(I,0,"IN"),++I),{rrType:C,tokens:B,hasName:Q,hasTtl:g,typeIndex:I}},t=function(A){let B={},Q=A.length;return B.name=A[0],B.minimum=parseInt(A[Q-1],10),B.expire=parseInt(A[Q-2],10),B.retry=parseInt(A[Q-3],10),B.refresh=parseInt(A[Q-4],10),B.serial=parseInt(A[Q-5],10),B.rname=A[Q-6],B.mname=A[Q-7],isNaN(A[1])||(B.ttl=parseInt(A[1],10)),B},U=function(A,B){let Q=A.tokens;A.hasName||(B.length?Q.unshift(B[B.length-1].name):Q.unshift("@"));let g=Q.length,E={name:Q[0],host:Q[g-1]};return A.hasTtl&&(E.ttl=parseInt(Q[1],10)),E},s=function(A,B){let Q=A.tokens;A.hasName||(B.length?Q.unshift(B[B.length-1].name):Q.unshift("@"));let g=Q.length,E={name:Q[0],ip:Q[g-1]};return A.hasTtl&&(E.ttl=parseInt(Q[1],10)),E},o=function(A,B){let Q=A.tokens;A.hasName||(B.length?Q.unshift(B[B.length-1].name):Q.unshift("@"));let g=Q.length,E={name:Q[0],ip:Q[g-1]};return A.hasTtl&&(E.ttl=parseInt(Q[1],10)),E},l=function(A,B){let Q=A.tokens;A.hasName||(B.length?Q.unshift(B[B.length-1].name):Q.unshift("@"));let g=Q.length,E={name:Q[0],alias:Q[g-1]};return A.hasTtl&&(E.ttl=parseInt(Q[1],10)),E},a=function(A,B){let Q=A.tokens;A.hasName||(B.length?Q.unshift(B[B.length-1].name):Q.unshift("@"));let g=Q.length,E={name:Q[0],preference:parseInt(Q[g-2],10),host:Q[g-1]};return A.hasTtl&&(E.ttl=parseInt(Q[1],10)),E},c=function(A,B){let Q=A.tokens;const g=Q.slice(A.typeIndex+1);A.hasName||(B.length?Q.unshift(B[B.length-1].name):Q.unshift("@"));let E={name:Q[0],txt:g.join(" ")};return A.hasTtl&&(E.ttl=parseInt(Q[1],10)),E},i=function(A,B,Q){let g=A.tokens;!A.hasName&&B[B.length-1]&&g.unshift(B[B.length-1].name);let E=g.length,C={name:g[0],fullname:g[0]+"."+Q,host:g[E-1]};return A.hasTtl&&(C.ttl=parseInt(g[1],10)),C},D=function(A,B){let Q=A.tokens;A.hasName||(B.length?Q.unshift(B[B.length-1].name):Q.unshift("@"));let g=Q.length,E={name:Q[0],target:Q[g-1],priority:parseInt(Q[g-4],10),weight:parseInt(Q[g-3],10),port:parseInt(Q[g-2],10)};return A.hasTtl&&(E.ttl=parseInt(Q[1],10)),E},G=function(A,B){let Q=A.tokens;const g=Q.slice(A.typeIndex+1);A.hasName||(B.length?Q.unshift(B[B.length-1].name):Q.unshift("@"));let E={name:Q[0],data:g.join(" ")};return A.hasTtl&&(E.ttl=parseInt(Q[1],10)),E},R=function(A,B){let Q=A.tokens;A.hasName||(B.length?Q.unshift(B[B.length-1].name):Q.unshift("@"));let g=Q.length,E={name:Q[0],flags:parseInt(Q[g-3],10),tag:Q[g-2],value:Q[g-1]};return A.hasTtl&&(E.ttl=parseInt(Q[1],10)),E},d=function(A,B){let Q=A.tokens;A.hasName||(B.length?Q.unshift(B[B.length-1].name):Q.unshift("@"));let g=Q.length,E={name:Q[0],key_tag:Q[g-4],algorithm:Q[g-3],digest_type:Q[g-2],digest:Q[g-1]};return A.hasTtl&&(E.ttl=parseInt(Q[1],10)),E},M=function(A,B,Q){let g=B||/\s/g,E=!1,C=!1,I=[],n=[],e=A.split("");for(let A=0;A<e.length;++A){let B=e[A],w=B.match(g);"'"!==B||C?'"'!==B||E?E||C||!w?I.push(B):I.length>0&&(n.push(I.join("")),I=[]):(!0===Q&&I.push(B),C=!C):(!0===Q&&I.push(B),E=!E)}return I.length>0?n.push(I.join("")):B&&n.push(""),n};const r={generate:function(A,B){const Q=JSON.parse(JSON.stringify(A));return B=B||"; Zone: {zone}\n; Exported  (yyyy-mm-ddThh:mm:ss.sssZ): {datetime}\n\n{$origin}\n{$ttl}\n\n; SOA Record\n{name} {ttl}\tIN\tSOA\t{mname}{rname}(\n{serial} ;serial\n{refresh} ;refresh\n{retry} ;retry\n{expire} ;expire\n{minimum} ;minimum ttl\n)\n\n; NS Records\n{ns}\n\n; MX Records\n{mx}\n\n; A Records\n{a}\n\n; AAAA Records\n{aaaa}\n\n; CNAME Records\n{cname}\n\n; PTR Records\n{ptr}\n\n; TXT Records\n{txt}\n\n; SRV Records\n{srv}\n\n; SPF Records\n{spf}\n\n; CAA Records\n{caa}\n\n; DS Records\n{ds}\n\n",B=function(A,B){let Q="";return void 0!==A&&(Q+="$ORIGIN "+A),B.replace("{$origin}",Q)}(Q.$origin,B),B=function(A,B){let Q="";return void 0!==A&&(Q+="$TTL "+A),B.replace("{$ttl}",Q)}(Q.$ttl,B),B=function(A,B){let Q=B;return A.name=A.name||"@",A.ttl=A.ttl||"",Object.keys(A).map((B=>{Q=Q.replace("{"+B+"}",A[B]+"\t")})),Q}(Q.soa,B),B=function(A,B){let Q="";for(let B of A)Q+=(B.name||"@")+"\t",B.ttl&&(Q+=B.ttl+"\t"),Q+="IN\tNS\t"+B.host+"\n";return B.replace("{ns}",Q)}(Q.ns||[],B),B=function(A,B){let Q="";for(let B of A)Q+=(B.name||"@")+"\t",B.ttl&&(Q+=B.ttl+"\t"),Q+="IN\tA\t"+B.ip+"\n";return B.replace("{a}",Q)}(Q.a||[],B),B=function(A,B){let Q="";for(let B of A)Q+=(B.name||"@")+"\t",B.ttl&&(Q+=B.ttl+"\t"),Q+="IN\tAAAA\t"+B.ip+"\n";return B.replace("{aaaa}",Q)}(Q.aaaa||[],B),B=function(A,B){let Q="";for(let B of A)Q+=(B.name||"@")+"\t",B.ttl&&(Q+=B.ttl+"\t"),Q+="IN\tCNAME\t"+B.alias+"\n";return B.replace("{cname}",Q)}(Q.cname||[],B),B=function(A,B){let Q="";for(let B of A)Q+=(B.name||"@")+"\t",B.ttl&&(Q+=B.ttl+"\t"),Q+="IN\tMX\t"+B.preference+"\t"+B.host+"\n";return B.replace("{mx}",Q)}(Q.mx||[],B),B=function(A,B){let Q="";for(let B of A)Q+=(B.name||"@")+"\t",B.ttl&&(Q+=B.ttl+"\t"),Q+="IN\tPTR\t"+B.host+"\n";return B.replace("{ptr}",Q)}(Q.ptr||[],B),B=function(A,B){let Q="";for(let B of A)Q+=(B.name||"@")+"\t",B.ttl&&(Q+=B.ttl+"\t"),Q+="IN\tTXT\t"+B.txt+"\n";return B.replace("{txt}",Q)}(Q.txt||[],B),B=function(A,B){let Q="";for(let B of A)Q+=(B.name||"@")+"\t",B.ttl&&(Q+=B.ttl+"\t"),Q+="IN\tSRV\t"+B.priority+"\t",Q+=B.weight+"\t",Q+=B.port+"\t",Q+=B.target+"\n";return B.replace("{srv}",Q)}(Q.srv||[],B),B=function(A,B){let Q="";for(let B of A)Q+=(B.name||"@")+"\t",B.ttl&&(Q+=B.ttl+"\t"),Q+="IN\tSPF\t"+B.data+"\n";return B.replace("{spf}",Q)}(Q.spf||[],B),B=function(A,B){let Q="";for(let B of A)Q+=(B.name||"@")+"\t",B.ttl&&(Q+=B.ttl+"\t"),Q+=`IN\tCAA\t${B.flags}\t${B.tag}\t${B.value}\n`;return B.replace("{caa}",Q)}(Q.caa||[],B),(B=function(A,B){return(B=(B=B.replace("{zone}",A.$origin||A.soa.name||"")).replace("{datetime}",(new Date).toISOString())).replace("{time}",Math.round(Date.now()/1e3))}(Q,B=function(A,B){let Q="";for(let B of A)Q+=(B.name||"@")+"\t",B.ttl&&(Q+=B.ttl+"\t"),Q+=`IN\tDS\t${B.key_tag}\t${B.algorithm}\t${B.digest_type}\t${B.digest}\n`;return B.replace("{ds}",Q)}(Q.ds||[],B))).replace(/\n{2,}/gim,"\n\n")},parse:function(A){return function(A){let B={},Q=A.split("\n");for(let A of Q){if(!A.trim())continue;let Q=M(A,null,!0);if(A.startsWith("$ORIGIN"))B.$origin=Q[1];else if(A.startsWith("$TTL"))B.$ttl=Q[1];else{const g=F(A);switch(g.rrType){case"SOA":B.soa=t(Q);break;case"TXT":B.txt=B.txt||[],B.txt.push(c(g,B.txt));break;case"NS":B.ns=B.ns||[],B.ns.push(U(g,B.ns));break;case"A":B.a=B.a||[],B.a.push(s(g,B.a));break;case"AAAA":B.aaaa=B.aaaa||[],B.aaaa.push(o(g,B.aaaa));break;case"CNAME":B.cname=B.cname||[],B.cname.push(l(g,B.cname));break;case"MX":B.mx=B.mx||[],B.mx.push(a(g,B.mx));break;case"PTR":B.ptr=B.ptr||[],B.ptr.push(i(g,B.ptr,B.$origin));break;case"SRV":B.srv=B.srv||[],B.srv.push(D(g,B.srv));break;case"SPF":B.spf=B.spf||[],B.spf.push(G(g,B.spf));break;case"CAA":B.caa=B.caa||[],B.caa.push(R(g,B.caa));break;case"DS":B.ds=B.ds||[],B.ds.push(d(g,B.ds))}}}return B}(A=function(A){let B=/SOA[\s\S]*?\([\s\S]*?\)/gim.exec(A);if(null!==B){let Q=B[0].replace(/\s+/gm," ");return Q=Q.replace(/\(|\)/gim," "),A.substring(0,B.index)+Q+A.substring(B.index+B[0].length)}return A}(A=function(A){const B=A.split("\n");let Q="";for(const A of B){if(A.trim().startsWith(";"))continue;const B=M(A,";",!0);for(const A of B){if(Q+=A,!A.endsWith("\\")){Q+="\n";break}Q+=";"}}return Q}(A)))}};function b(A){var B=A.dnsSuffix;"."!=B[B.length-1]&&(B+=".");var Q=n(B,A.altitude,A.addUnkownAltitudeRecords);if(!Q)return null;var g=function(A){var B="",Q=Math.min(...A.map((A=>A.length)));for(let E=0;E<Q;E++){var g=A[0][A[0].length-E-1];if(!A.every((A=>A[A.length-E-1]==g)))break;B=g+B}return B}(Q),E={$origin:g=g.slice(1),$ttl:A.TTL,soa:{mname:A.mname,rname:A.rname,serial:parseInt(Date.now()/1e3)%Math.pow(2,32),refresh:A.refresh,retry:A.retry,expire:A.expire,minimum:A.minimum}};E.ns=[{name:"@",host:A.mname}],E.txt=[];for(let B of Q){var C=B.slice(0,B.length-g.length-1);E.txt.push({name:C,txt:`type@${A.rrType}#data@${A.rrData}`})}return r.generate(E)}function Y(){const A={unknownAltidude:document.getElementById("unknown-altitude").checked,altitude:document.getElementById("altitude").value,addUnkownAltitudeRecords:document.getElementById("add-unknown-altitude").checked,dnsSuffix:document.getElementById("dns-suffix").value,mname:document.getElementById("mname").value,rname:document.getElementById("rname").value,refresh:document.getElementById("refresh").value,retry:document.getElementById("retry").value,expire:document.getElementById("expire").value,minimum:document.getElementById("minimum").value,rrType:document.getElementById("rr-type").value,rrData:document.getElementById("rr-data").value,TTL:document.getElementById("ttl").value};A.unknownAltidude&&(A.altitude="U");const B=b(A);if(!B)return null;const Q=document.createElement("a");return Q.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(B)),Q.setAttribute("download","dns-zonefile.txt"),Q.style.display="none",document.body.appendChild(Q),Q.click(),document.body.removeChild(Q),B}!function(){var B=L.map("map").setView([40.44266,-79.94327],17);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{maxZoom:19,attribution:'&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'}).addTo(B),B.pm.addControls({drawMarker:!0,drawCircleMarker:!1,drawPolyline:!1,drawRectangle:!1,drawPolygon:!0,drawCircle:!1,drawText:!1});const Q=new GeoSearch.OpenStreetMapProvider,g=new GeoSearch.GeoSearchControl({provider:Q,style:"bar"});B.addControl(g),B.on("pm:drawstart",(Q=>{"Polygon"===Q.shape&&(A.currentPolygonLayer&&(B.removeLayer(A.currentPolygonLayer),A.currentPolygonLayer=null,A.currentPolygonCoords=null),A.s2CellsLayerGroup&&(B.removeLayer(A.s2CellsLayerGroup),A.s2CellsLayerGroup=null,A.currentS2Cells=null))})),B.on("pm:create",(Q=>{if("Polygon"===Q.shape){const B=Q.layer,g=B.getLatLngs()[0];A.setCurrentPolygonCoords(g),A.currentPolygonLayer=B}if("Marker"===Q.shape){const g=Q.layer;A.currentMarkerLayer&&(B.removeLayer(A.currentMarkerLayer),B.removeLayer(A.currentMarkerErrorCircleLayer),A.currentMarkerLayer=null,A.currentMarkerErrorCircleLayer=null),A.currentMarkerLayer=g;let E=document.getElementById("gps-error").value;A.currentMarkerErrorCircleLayer=L.circle(g.getLatLng(),{radius:E,color:"purple",weight:1,fillColor:"purple",fillOpacity:.2}).addTo(B),w()}})),A.map=B}(),document.getElementById("generate-s2-button").addEventListener("click",(()=>{!function(){if(A.currentPolygonCoords){var B=document.getElementById("max-s2-cells").value;if(B){var Q=function(A,B){var Q=B;return function(A){for(var B=0,Q=0;Q<A.length;Q++){var g=A[Q],E=A[(Q+1)%A.length];B+=(E.Lng-g.Lng)*(E.Lat+g.Lat)}return B<0}(Q)||(Q=Q.reverse()),GetS2CellsInRegion(Q,1,30,A)}(B=parseInt(B),A.currentPolygonCoords),g=[];for(let A in Q){var E=Q[A];E=E.map((A=>[A.Lat,A.Lng]));var C=L.polygon(E,{color:"red",fillOpacity:.1,opacity:.5,weight:2});g.push(C)}A.s2CellsLayerGroup&&A.map.removeLayer(A.s2CellsLayerGroup),A.s2CellsLayerGroup=L.layerGroup(g),A.s2CellsLayerGroup.addTo(A.map),A.currentS2Cells=Q}else alert("Please enter a number of cells")}else alert("Please draw a polygon first")}()}));const Z=document.getElementById("dns-config-form");Z.addEventListener("submit",(A=>{A.preventDefault(),Z.checkValidity()?Y():Z.reportValidity()})),document.getElementById("gps-error").addEventListener("change",(B=>{if(A.currentMarkerErrorCircleLayer){let Q=B.target.value;A.currentMarkerErrorCircleLayer.setRadius(Q),w()}})),document.getElementById("generate-geodomains-button").addEventListener("click",(()=>{A.currentMarkerLayer?w():alert("Please place a marker first")})),document.getElementById("clear-marker-button").addEventListener("click",(()=>{A.currentMarkerLayer&&(A.map.removeLayer(A.currentMarkerLayer),A.map.removeLayer(A.currentMarkerErrorCircleLayer),A.currentMarkerLayer=null,A.currentMarkerErrorCircleLayer=null,A.currentGeoS2CellsLayerGroup&&(A.map.removeLayer(A.currentGeoS2CellsLayerGroup),A.currentGeoS2CellsLayerGroup=null))})),document.getElementById("clear-polygon-button").addEventListener("click",(()=>{A.currentPolygonLayer&&(A.map.removeLayer(A.currentPolygonLayer),A.currentPolygonLayer=null,A.currentPolygonCoords=null,A.s2CellsLayerGroup&&(A.map.removeLayer(A.s2CellsLayerGroup),A.s2CellsLayerGroup=null,A.currentS2Cells=null))}));var y={tokenToDomainDigits:Q,domainDigitsToToken:g,binaryIDToDomainDigits:C,domainDigitsToBinaryID:E,getGeoDomainsForCurrentCells:n,getS2TokensForLocation:e,generateZoneFile:b,generateZoneFileFromDOM:Y,globalState:A}})(),maputils=__webpack_exports__})();